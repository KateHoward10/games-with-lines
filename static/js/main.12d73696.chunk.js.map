{"version":3,"sources":["images/noughts&crosses.png","images/connect4.png","images/battleships.png","components/Nav.js","components/Menu.js","components/Box.js","combinations.js","components/Grid.js","components/Cell.js","components/Arrow.js","components/Board.js","components/Tile/styles.js","components/Tile/index.js","components/Sea/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","to","className","Component","Menu","src","require","alt","Box","box","mySymbol","computerSymbol","selectBox","onClick","selectedBy","possibleThrees","possibleFours","Grid","state","win","boxes","index","winningThree","playing","reset","setState","myTurn","Boolean","Math","random","round","finishTurn","changeSymbol","checkForThree","player","some","combination","every","boxNumber","find","filter","length","select","setTimeout","key","computerChoice","indices","Object","keys","combos","floor","this","boxSideLength","min","window","innerWidth","innerHeight","style","gridTemplateColumns","gridTemplateRows","width","height","x1","y1","x2","y2","map","Fragment","backgroundColor","color","Cell","fill","myColour","computerColour","cellSideLength","borderRadius","Arrow","props","hidden","active","selectColumn","parseFloat","fontSize","fontWeight","cursor","display","Board","cells","winner","winningCombo","rolling","computerTurn","changeColour","findAvailableCells","columnNumber","cell","sort","a","b","findBottomNumber","availableCells","max","checkForFour","cellNumber","roll","finishRoll","numbers","lastNumber","reachBottomCell","array","interval","callback","i","next","slowLoop","computerColumnChoice","availableColumns","slice","SeaTile","styled","div","selected","BitOfShip","visible","completed","css","position","direction","solo","Tile","ships","tile","selectingWater","initialValue","selectAsShip","unselectAsShip","selectAsWater","unselectAsWater","mouseDown","toggleMouseDown","thisShip","ship","includes","indexInShip","indexOf","setTile","onMouseDown","onMouseUp","onMouseEnter","Sea","tileSideLength","lengths","useState","setShips","setNumbers","toggleSelectingWater","visiblePositions","setVisiblePositions","selectedAsShips","setSelectedAsShips","selectedAsWater","setSelectedAsWater","setCompleted","placeShip","existingShips","filledTiles","Set","tiles","push","part","getForbiddenTiles","flat","horizontalPossibilities","Array","from","number","verticalPossibilities","dir","firstPos","newSelected","join","newShips","latestShip","randomised","topNumbers","sideNumbers","App","exact","path","component","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8KAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,kJCqB5BC,E,iLAhBX,OACE,6BACE,kBAAC,IAAD,CAASC,GAAG,mBAAmBC,UAAU,YAAzC,qBAGA,kBAAC,IAAD,CAASD,GAAG,YAAYC,UAAU,YAAlC,aAGA,kBAAC,IAAD,CAASD,GAAG,eAAeC,UAAU,YAArC,oB,GAVUC,aCmBHC,MAnBf,WACE,OACE,yBAAKF,UAAU,QACb,kBAAC,IAAD,CAASD,GAAG,mBAAmBC,UAAU,gBAAzC,oBAEE,yBAAKA,UAAU,UAAUG,IAAKC,EAAQ,IAAkCC,IAAI,uBAE9E,kBAAC,IAAD,CAASN,GAAG,YAAYC,UAAU,gBAAlC,YAEE,yBAAKA,UAAU,UAAUG,IAAKC,EAAQ,IAA2BC,IAAI,eAEvE,kBAAC,IAAD,CAASN,GAAG,eAAeC,UAAU,gBAArC,cAEE,yBAAKA,UAAU,UAAUG,IAAKC,EAAQ,IAA8BC,IAAI,mBCJjEC,EAVH,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,eAAgBC,EAAlC,EAAkCA,UAAlC,OACX,yBAAKV,UAAU,MAAMW,QAASD,GACT,OAAnBH,EAAIK,WACJ,0BAAMZ,UAAU,YAAYQ,GACN,aAAnBD,EAAIK,WACP,0BAAMZ,UAAU,kBAAkBS,GAC/B,OCROI,EAAiB,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAEtGC,EAAgB,CAC3B,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IAC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","file":"static/js/main.12d73696.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noughts&crosses.6b73ade5.png\";","module.exports = __webpack_public_path__ + \"static/media/connect4.de3839ad.png\";","module.exports = __webpack_public_path__ + \"static/media/battleships.555f39a7.png\";","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav>\n        <NavLink to=\"/noughts&crosses\" className=\"nav-link\">\n          Noughts & Crosses\n        </NavLink>\n        <NavLink to=\"/connect4\" className=\"nav-link\">\n          Connect 4\n        </NavLink>\n        <NavLink to=\"/battleships\" className=\"nav-link\">\n          Battleships\n        </NavLink>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Menu() {\n  return (\n    <div className=\"menu\">\n      <NavLink to=\"/noughts&crosses\" className=\"preview-link\">\n        Noughts & Crosses\n        <img className=\"preview\" src={require('../images/noughts&crosses.png')} alt=\"Noughts & Crosses\" />\n      </NavLink>\n      <NavLink to=\"/connect4\" className=\"preview-link\">\n        Connect 4\n        <img className=\"preview\" src={require('../images/connect4.png')} alt=\"Connect 4\" />\n      </NavLink>\n      <NavLink to=\"/battleships\" className=\"preview-link\">\n        Battleships\n        <img className=\"preview\" src={require('../images/battleships.png')} alt=\"Battleships\" />\n      </NavLink>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\n\nconst Box = ({ box, mySymbol, computerSymbol, selectBox }) => (\n\t<div className=\"box\" onClick={selectBox}>\n\t\t{box.selectedBy === 'me' ? (\n\t\t\t<span className=\"mySymbol\">{mySymbol}</span>\n\t\t) : box.selectedBy === 'computer' ? (\n\t\t\t<span className=\"computerSymbol\">{computerSymbol}</span>\n\t\t) : null}\n\t</div>\n);\n\nexport default Box;\n","export const possibleThrees = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nexport const possibleFours = [\n  [0, 1, 2, 3],\n  [1, 2, 3, 4],\n  [2, 3, 4, 5],\n  [3, 4, 5, 6],\n  [7, 8, 9, 10],\n  [8, 9, 10, 11],\n  [9, 10, 11, 12],\n  [10, 11, 12, 13],\n  [14, 15, 16, 17],\n  [15, 16, 17, 18],\n  [16, 17, 18, 19],\n  [17, 18, 19, 20],\n  [21, 22, 23, 24],\n  [22, 23, 24, 25],\n  [23, 24, 25, 26],\n  [24, 25, 26, 27],\n  [28, 29, 30, 31],\n  [29, 30, 31, 32],\n  [30, 31, 32, 33],\n  [31, 32, 33, 34],\n  [35, 36, 37, 38],\n  [36, 37, 38, 39],\n  [37, 38, 39, 40],\n  [38, 39, 40, 41],\n  [0, 7, 14, 21],\n  [7, 14, 21, 28],\n  [14, 21, 28, 35],\n  [1, 8, 15, 22],\n  [8, 15, 22, 29],\n  [15, 22, 29, 36],\n  [2, 9, 16, 23],\n  [9, 16, 23, 30],\n  [16, 23, 30, 37],\n  [3, 10, 17, 24],\n  [10, 17, 24, 31],\n  [17, 24, 31, 38],\n  [4, 11, 18, 25],\n  [11, 18, 25, 32],\n  [18, 25, 32, 39],\n  [5, 12, 19, 26],\n  [12, 19, 26, 33],\n  [19, 26, 33, 40],\n  [6, 13, 20, 27],\n  [13, 20, 27, 34],\n  [20, 27, 34, 41],\n  [0, 8, 16, 24],\n  [1, 9, 17, 25],\n  [2, 10, 18, 26],\n  [3, 11, 19, 27],\n  [7, 15, 23, 31],\n  [8, 16, 24, 32],\n  [9, 17, 25, 33],\n  [10, 18, 26, 34],\n  [14, 22, 30, 38],\n  [15, 23, 31, 39],\n  [16, 24, 32, 40],\n  [17, 25, 33, 41],\n  [21, 15, 9, 3],\n  [22, 16, 10, 4],\n  [23, 17, 11, 5],\n  [24, 18, 12, 6],\n  [28, 22, 16, 10],\n  [29, 23, 17, 11],\n  [30, 24, 18, 12],\n  [31, 25, 19, 13],\n  [35, 29, 23, 17],\n  [36, 30, 24, 18],\n  [37, 31, 25, 19],\n  [38, 32, 26, 20]\n];\n","import React, { Component } from 'react';\nimport Box from './Box';\nimport { possibleThrees } from '../combinations';\n\nclass Grid extends Component {\n  state = {\n    win: '',\n    boxes: [\n      { index: 0, selectedBy: '' },\n      { index: 1, selectedBy: '' },\n      { index: 2, selectedBy: '' },\n      { index: 3, selectedBy: '' },\n      { index: 4, selectedBy: '' },\n      { index: 5, selectedBy: '' },\n      { index: 6, selectedBy: '' },\n      { index: 7, selectedBy: '' },\n      { index: 8, selectedBy: '' }\n    ],\n    winningThree: [],\n    playing: false\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        win: '',\n        boxes: [\n          { index: 0, selectedBy: '' },\n          { index: 1, selectedBy: '' },\n          { index: 2, selectedBy: '' },\n          { index: 3, selectedBy: '' },\n          { index: 4, selectedBy: '' },\n          { index: 5, selectedBy: '' },\n          { index: 6, selectedBy: '' },\n          { index: 7, selectedBy: '' },\n          { index: 8, selectedBy: '' }\n        ],\n        winningThree: [],\n        myTurn: Boolean(Math.random() < 0.5),\n        mySymbol: ['O', 'X'][Math.round(Math.random())],\n        playing: true\n      },\n      () => {\n        if (!this.state.myTurn) {\n          this.finishTurn();\n        }\n      }\n    );\n  };\n\n  changeSymbol = () => {\n    const { mySymbol } = this.state;\n    this.setState({\n      mySymbol: mySymbol === 'X' ? 'O' : 'X'\n    });\n  };\n\n  checkForThree = player => {\n    const { boxes } = this.state;\n    if (possibleThrees.some(combination => combination.every(boxNumber => boxes[boxNumber]['selectedBy'] === player))) {\n      this.setState({\n        win: player,\n        winningThree: possibleThrees.find(combination =>\n          combination.every(boxNumber => boxes[boxNumber]['selectedBy'] === player)\n        ),\n        playing: false\n      });\n    } else if (boxes.filter(box => box['selectedBy'] !== '').length > 8) {\n      this.setState({ win: 'draw', playing: false });\n    }\n  };\n\n  select = (index, player) => {\n    const { win, boxes, myTurn } = this.state;\n    if (win !== '') {\n      return;\n    } else {\n      boxes[index].selectedBy = player;\n      this.setState({ boxes }, () => this.checkForThree(player));\n      setTimeout(() => this.setState({ myTurn: !myTurn }), 500);\n    }\n  };\n\n  selectBox = key => {\n    const { win, boxes, myTurn, playing } = this.state;\n    if (playing && myTurn && boxes[key]['selectedBy'] === '' && win === '') {\n      this.select(key, 'me');\n      this.checkForThree('me');\n      if (win !== '') {\n        return;\n      } else {\n        this.finishTurn();\n      }\n    }\n  };\n\n  finishTurn = () => {\n    const { boxes } = this.state;\n    const indices = Object.keys(boxes).filter(key => boxes[key]['selectedBy'] === '');\n    let computerChoice;\n    if (\n      possibleThrees.some(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === 'computer').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === '').length === 1\n      )\n    ) {\n      const combos = possibleThrees.filter(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === 'computer').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === '').length === 1\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber]['selectedBy'] === '');\n    } else if (\n      possibleThrees.some(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === 'me').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === '').length === 1\n      )\n    ) {\n      const combos = possibleThrees.filter(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === 'me').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber]['selectedBy'] === '').length === 1\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber]['selectedBy'] === '');\n    } else {\n      computerChoice = indices[Math.floor(Math.random() * indices.length)];\n    }\n    setTimeout(this.select, 500, computerChoice, 'computer');\n  };\n\n  render() {\n    const { mySymbol, win, winningThree, boxes, myTurn, playing } = this.state;\n    const computerSymbol = mySymbol === 'X' ? 'O' : 'X';\n    const boxSideLength = Math.min(window.innerWidth, window.innerHeight) / 4;\n    return (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div\n            className=\"container\"\n            style={{\n              gridTemplateColumns: `repeat(3, ${boxSideLength}px)`,\n              gridTemplateRows: `repeat(3, ${boxSideLength}px)`\n            }}\n          >\n            {winningThree.length > 0 ? (\n              <svg className=\"path-container\" width={boxSideLength * 3} height={boxSideLength * 3}>\n                <line\n                  x1={(winningThree[0] % 3) * boxSideLength + boxSideLength / 2}\n                  y1={Math.floor(winningThree[0] / 3) * boxSideLength + boxSideLength / 2}\n                  x2={(winningThree[2] % 3) * boxSideLength + boxSideLength / 2}\n                  y2={Math.floor(winningThree[2] / 3) * boxSideLength + boxSideLength / 2}\n                />\n              </svg>\n            ) : null}\n            {Object.keys(boxes).map(key => (\n              <Box\n                index={key}\n                key={key}\n                win={win}\n                box={boxes[key]}\n                mySymbol={mySymbol}\n                computerSymbol={computerSymbol}\n                selectBox={() => this.selectBox(key)}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <button onClick={this.reset}>New Game</button>\n          {playing && (\n            <React.Fragment>\n              <p>{myTurn ? 'Your turn' : \"The computer's turn\"}</p>\n              <div className=\"option-picker\">\n                <p>You are: {mySymbol}s</p>\n                <button onClick={this.changeSymbol} style={{ backgroundColor: 'yellow', color: 'black' }}>\n                  Choose {computerSymbol}s\n                </button>\n              </div>\n            </React.Fragment>\n          )}\n          {win === 'draw' ? (\n            <h2>It's a draw</h2>\n          ) : win === 'me' ? (\n            <h2>You win!</h2>\n          ) : win === 'computer' ? (\n            <h2>The computer wins!</h2>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Grid;\n","import React from 'react';\n\nconst Cell = ({ fill, myColour, computerColour, cellSideLength }) => (\n  <div className=\"cell\">\n    <div\n      className=\"circle\"\n      style={{\n        width: `${cellSideLength * 0.75}px`,\n        height: `${cellSideLength * 0.75}px`,\n        backgroundColor: fill === 'me' ? myColour : fill === 'computer' ? computerColour : '#80acf2',\n        borderRadius: '50%'\n      }}\n    />\n  </div>\n);\n\nexport default Cell;\n","import React from 'react';\n\nfunction Arrow(props) {\n  const { cellSideLength, hidden, active, index, selectColumn } = props;\n\n  function selectArrow() {\n    if (!hidden && active) {\n      selectColumn(parseFloat(index, 10), 'me');\n    }\n  }\n\n  return (\n    <div\n      onClick={selectArrow}\n      style={{\n        fontSize: `${cellSideLength / 2}px`,\n        fontWeight: 'bold',\n        width: `${cellSideLength}px`,\n        cursor: 'pointer'\n      }}\n    >\n      <span style={{ display: hidden ? 'none' : 'block' }}>↓</span>\n    </div>\n  );\n}\n\nexport default Arrow;\n","import React, { Component } from 'react';\nimport Cell from './Cell';\nimport Arrow from './Arrow';\nimport { possibleFours } from '../combinations';\n\nclass Board extends Component {\n  state = {\n    cells: [\n      { index: 0, selectedBy: '' },\n      { index: 1, selectedBy: '' },\n      { index: 2, selectedBy: '' },\n      { index: 3, selectedBy: '' },\n      { index: 4, selectedBy: '' },\n      { index: 5, selectedBy: '' },\n      { index: 6, selectedBy: '' },\n      { index: 7, selectedBy: '' },\n      { index: 8, selectedBy: '' },\n      { index: 9, selectedBy: '' },\n      { index: 10, selectedBy: '' },\n      { index: 11, selectedBy: '' },\n      { index: 12, selectedBy: '' },\n      { index: 13, selectedBy: '' },\n      { index: 14, selectedBy: '' },\n      { index: 15, selectedBy: '' },\n      { index: 16, selectedBy: '' },\n      { index: 17, selectedBy: '' },\n      { index: 18, selectedBy: '' },\n      { index: 19, selectedBy: '' },\n      { index: 20, selectedBy: '' },\n      { index: 21, selectedBy: '' },\n      { index: 22, selectedBy: '' },\n      { index: 23, selectedBy: '' },\n      { index: 24, selectedBy: '' },\n      { index: 25, selectedBy: '' },\n      { index: 26, selectedBy: '' },\n      { index: 27, selectedBy: '' },\n      { index: 28, selectedBy: '' },\n      { index: 29, selectedBy: '' },\n      { index: 30, selectedBy: '' },\n      { index: 31, selectedBy: '' },\n      { index: 32, selectedBy: '' },\n      { index: 33, selectedBy: '' },\n      { index: 34, selectedBy: '' },\n      { index: 35, selectedBy: '' },\n      { index: 36, selectedBy: '' },\n      { index: 37, selectedBy: '' },\n      { index: 38, selectedBy: '' },\n      { index: 39, selectedBy: '' },\n      { index: 40, selectedBy: '' },\n      { index: 41, selectedBy: '' }\n    ],\n    winner: '',\n    winningCombo: [],\n    playing: false,\n    rolling: false\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        cells: [\n          { index: 0, selectedBy: '' },\n          { index: 1, selectedBy: '' },\n          { index: 2, selectedBy: '' },\n          { index: 3, selectedBy: '' },\n          { index: 4, selectedBy: '' },\n          { index: 5, selectedBy: '' },\n          { index: 6, selectedBy: '' },\n          { index: 7, selectedBy: '' },\n          { index: 8, selectedBy: '' },\n          { index: 9, selectedBy: '' },\n          { index: 10, selectedBy: '' },\n          { index: 11, selectedBy: '' },\n          { index: 12, selectedBy: '' },\n          { index: 13, selectedBy: '' },\n          { index: 14, selectedBy: '' },\n          { index: 15, selectedBy: '' },\n          { index: 16, selectedBy: '' },\n          { index: 17, selectedBy: '' },\n          { index: 18, selectedBy: '' },\n          { index: 19, selectedBy: '' },\n          { index: 20, selectedBy: '' },\n          { index: 21, selectedBy: '' },\n          { index: 22, selectedBy: '' },\n          { index: 23, selectedBy: '' },\n          { index: 24, selectedBy: '' },\n          { index: 25, selectedBy: '' },\n          { index: 26, selectedBy: '' },\n          { index: 27, selectedBy: '' },\n          { index: 28, selectedBy: '' },\n          { index: 29, selectedBy: '' },\n          { index: 30, selectedBy: '' },\n          { index: 31, selectedBy: '' },\n          { index: 32, selectedBy: '' },\n          { index: 33, selectedBy: '' },\n          { index: 34, selectedBy: '' },\n          { index: 35, selectedBy: '' },\n          { index: 36, selectedBy: '' },\n          { index: 37, selectedBy: '' },\n          { index: 38, selectedBy: '' },\n          { index: 39, selectedBy: '' },\n          { index: 40, selectedBy: '' },\n          { index: 41, selectedBy: '' }\n        ],\n        winner: '',\n        winningCombo: [],\n        myTurn: Boolean(Math.random() < 0.5),\n        myColour: ['red', 'yellow'][Math.round(Math.random())],\n        playing: true,\n        rolling: false\n      },\n      () => {\n        if (!this.state.myTurn) {\n          this.computerTurn();\n        }\n      }\n    );\n  };\n\n  changeColour = () => {\n    const { myColour } = this.state;\n    this.setState({\n      myColour: myColour === 'red' ? 'yellow' : 'red'\n    });\n  };\n\n  findAvailableCells = columnNumber => {\n    const columnCells = [\n      41 - 6 + columnNumber,\n      41 - 13 + columnNumber,\n      41 - 20 + columnNumber,\n      41 - 27 + columnNumber,\n      41 - 34 + columnNumber,\n      columnNumber\n    ];\n    const availableCells = columnCells.filter(\n      cell => this.state.cells[cell] && this.state.cells[cell]['selectedBy'] === ''\n    );\n    return availableCells.sort((a, b) => {\n      return a - b;\n    });\n  };\n\n  findBottomNumber = columnNumber => {\n    const availableCells = this.findAvailableCells(columnNumber);\n    return Math.max(...availableCells);\n  };\n\n  checkForFour = player => {\n    const { cells } = this.state;\n    // If any combination achieved by same player\n    if (\n      possibleFours.some(combination => combination.every(cellNumber => cells[cellNumber]['selectedBy'] === player))\n    ) {\n      this.setState({\n        playing: false,\n        winner: player,\n        winningCombo: possibleFours.find(combination =>\n          combination.every(cellNumber => cells[cellNumber]['selectedBy'] === player)\n        )\n      });\n      // If every cell filled by someone's counter\n    } else if (cells.every(cell => cell['selectedBy'] !== '')) {\n      this.setState({ playing: false, winner: 'draw' });\n    }\n  };\n\n  selectColumn = (columnNumber, player) => {\n    const { playing, winner, myTurn } = this.state;\n    if (!playing || winner !== '') {\n      return;\n    } else {\n      this.roll(columnNumber, player, () => {\n        this.setState({ myTurn: !myTurn, rolling: false }, () => this.checkForFour(player));\n        if (player === 'me' && playing) {\n          setTimeout(this.computerTurn, Math.random() * 2000);\n        }\n      });\n    }\n  };\n\n  roll = (columnNumber, player, finishRoll) => {\n    const { cells, rolling } = this.state;\n    if (rolling) return;\n    const numbers = this.findAvailableCells(columnNumber);\n    const lastNumber = this.findBottomNumber(columnNumber);\n    this.setState({ rolling: true });\n    const reachBottomCell = () => {\n      cells[lastNumber].selectedBy = player;\n      // For some reason this is needed to make sure it doesn't think you've scored a vertical 4 with only 3 counters\n      if (lastNumber >= 7) {\n        cells[lastNumber - 7].selectedBy = '';\n      }\n      this.setState({ cells }, () => finishRoll());\n    };\n    const slowLoop = (array, interval, callback) => {\n      var i = 0;\n      next();\n      function next() {\n        if (callback(array[i], i) !== false) {\n          if (++i < array.length - 1) {\n            setTimeout(next, interval);\n          } else {\n            reachBottomCell();\n          }\n        }\n      }\n    };\n    if (numbers.length === 1 && numbers[0] === lastNumber) {\n      reachBottomCell();\n    } else {\n      slowLoop(numbers, 100, i => {\n        cells[i].selectedBy = player;\n        this.setState({ cells });\n        setTimeout(() => {\n          cells[i].selectedBy = '';\n          this.setState({ cells });\n        }, 100);\n      });\n    }\n  };\n\n  computerTurn = () => {\n    const { cells } = this.state;\n    // Find columns which are not full\n    const availableColumns = Object.keys(cells.slice(0, 7)).filter(\n      key => this.findBottomNumber(parseFloat(key, 10)) > 0\n    );\n    let computerColumnChoice;\n    // If there are any 3/4s for the computer\n    if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7;\n      // If there are any 3/4s for me\n    } else if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7;\n    } else {\n      computerColumnChoice = parseFloat(availableColumns[Math.floor(Math.random() * availableColumns.length)], 10);\n    }\n    this.selectColumn(computerColumnChoice, 'computer');\n  };\n\n  render() {\n    const { playing, myTurn, myColour, winner, cells, winningCombo, rolling } = this.state;\n    const computerColour = myColour === 'red' ? 'yellow' : 'red';\n    const cellSideLength = Math.min(window.innerWidth, window.innerHeight) / 8;\n    return (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div className=\"arrows\" style={{ gridTemplateColumns: `repeat(7, ${cellSideLength}px)` }}>\n            {Object.keys(cells.slice(0, 7)).map(key => (\n              <Arrow\n                index={key}\n                key={key}\n                hidden={this.findBottomNumber(parseFloat(key, 10)) < 0}\n                selectColumn={this.selectColumn}\n                active={!rolling && myTurn}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n          <div\n            className=\"board\"\n            style={{\n              gridTemplateRows: `repeat(6, ${cellSideLength}px)`,\n              gridTemplateColumns: `repeat(7, ${cellSideLength}px)`\n            }}\n          >\n            <svg className=\"path-container\" width={cellSideLength * 7} height={cellSideLength * 6}>\n              {winningCombo.length === 4 && (\n                <line\n                  x1={(winningCombo[0] % 7) * cellSideLength + cellSideLength / 2}\n                  y1={Math.floor(winningCombo[0] / 7) * cellSideLength + cellSideLength / 2}\n                  x2={(winningCombo[3] % 7) * cellSideLength + cellSideLength / 2}\n                  y2={Math.floor(winningCombo[3] / 7) * cellSideLength + cellSideLength / 2}\n                />\n              )}\n            </svg>\n            {Object.keys(cells).map(key => (\n              <Cell\n                index={key}\n                key={key}\n                fill={cells[key]['selectedBy']}\n                myColour={myColour}\n                computerColour={computerColour}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <button onClick={this.reset}>New Game</button>\n          {playing && (\n            <React.Fragment>\n              <p>{myTurn ? 'Your turn' : \"The computer's turn\"}</p>\n              <div className=\"option-picker\">\n                <p>Your colour: {myColour}</p>\n                <button\n                  onClick={this.changeColour}\n                  style={{\n                    backgroundColor: computerColour,\n                    color: computerColour === 'yellow' ? 'black' : 'white'\n                  }}\n                >\n                  Choose {computerColour}\n                </button>\n              </div>\n            </React.Fragment>\n          )}\n          {winner === 'me' ? (\n            <h2>You win!</h2>\n          ) : winner === 'computer' ? (\n            <h2>The computer wins!</h2>\n          ) : winner === 'draw' ? (\n            <h2>It's a draw</h2>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import styled, { css } from 'styled-components';\n\nexport const SeaTile = styled.div`\n  background-color: ${props => (props.selected ? 'blue' : 'transparent')};\n  border: 1px solid black;\n  display: flex;\n  padding: 10px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const BitOfShip = styled.div`\n  background-color: yellow;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  border: 1px solid grey;\n  ${props =>\n    (props.visible || props.completed) &&\n    css`\n      border-top-left-radius: ${props.position === 'start' ? '50%' : 0};\n      border-top-right-radius: ${(props.position === 'start' && props.direction === 'vertical') ||\n      (props.position === 'end' && props.direction === 'horizontal')\n        ? '50%'\n        : 0};\n      border-bottom-left-radius: ${(props.position === 'start' && props.direction === 'horizontal') ||\n      (props.position === 'end' && props.direction === 'vertical')\n        ? '50%'\n        : 0};\n      border-bottom-right-radius: ${props.position === 'end' ? '50%' : 0};\n    `}\n  ${props =>\n    (props.visible || props.completed) &&\n    props.solo &&\n    css`\n      border-radius: 50%;\n    `}\n`;\n","import React from 'react';\nimport { SeaTile, BitOfShip } from './styles';\n\nfunction Tile({\n  ships,\n  tile,\n  selectingWater,\n  initialValue,\n  selectAsShip,\n  unselectAsShip,\n  selectAsWater,\n  unselectAsWater,\n  selected,\n  completed,\n  mouseDown,\n  toggleMouseDown\n}) {\n  const thisShip = ships.find(ship => ship.includes(tile));\n  const indexInShip = thisShip ? thisShip.indexOf(tile) : null;\n  const solo = thisShip && thisShip.length === 1;\n  const position =\n    thisShip && !solo ? (indexInShip === 0 ? 'start' : indexInShip === thisShip.length - 1 ? 'end' : 'middle') : null;\n\n  function getDirection() {\n    if (position === 'start') {\n      return thisShip[1] - tile === 7 ? 'vertical' : 'horizontal';\n    } else if (position === 'end') {\n      return tile - thisShip[indexInShip - 1] === 7 ? 'vertical' : 'horizontal';\n    }\n    return null;\n  }\n\n  function setTile() {\n    if (initialValue) return;\n    if (selected) {\n      selected === 'ship' ? unselectAsShip(tile) : unselectAsWater(tile);\n    } else {\n      selectingWater ? selectAsWater(tile) : selectAsShip(tile);\n    }\n  }\n\n  return (\n    <SeaTile\n      onMouseDown={() => {\n        toggleMouseDown(true);\n        setTile();\n      }}\n      onMouseUp={() => toggleMouseDown(false)}\n      onMouseEnter={() => {\n        if (mouseDown) setTile();\n      }}\n      selected={initialValue || selected}\n    >\n      {(initialValue === 'ship' || selected === 'ship') && (\n        <BitOfShip\n          position={position}\n          direction={getDirection()}\n          solo={solo}\n          visible={initialValue === 'ship'}\n          completed={completed}\n        >\n          {!initialValue && !completed && '?'}\n        </BitOfShip>\n      )}\n    </SeaTile>\n  );\n}\n\nexport default Tile;\n","import React, { useState } from 'react';\nimport Tile from '../Tile';\n\nfunction Sea() {\n  const tileSideLength = Math.min(window.innerWidth, window.innerHeight) / 9;\n  const lengths = [4, 3, 2, 2, 1, 1];\n  const [ships, setShips] = useState([]);\n  const [numbers, setNumbers] = useState([[], []]);\n  const [selectingWater, toggleSelectingWater] = useState(true);\n  const [visiblePositions, setVisiblePositions] = useState([]);\n  const [selectedAsShips, setSelectedAsShips] = useState([]);\n  const [selectedAsWater, setSelectedAsWater] = useState([]);\n  const [completed, setCompleted] = useState(false);\n  const [mouseDown, toggleMouseDown] = useState(false);\n\n  function generateShips() {\n    let newShips = [];\n    setNumbers([[], []]);\n    setSelectedAsWater([]);\n    setCompleted(false);\n    for (let i = 0; i < lengths.length; i++) {\n      let latestShip = placeShip(lengths[i], newShips);\n      newShips.push(latestShip);\n    }\n    setShips(newShips);\n    let randomised = newShips.flat().sort(() => Math.random() - 0.5);\n    setVisiblePositions(randomised.slice(-3));\n    setSelectedAsShips(randomised.slice(-3));\n    let topNumbers = [];\n    let sideNumbers = [];\n    for (let i = 0; i < 7; i++) {\n      topNumbers.push(newShips.flat().filter(part => part % 7 === i).length);\n      sideNumbers.push(newShips.flat().filter(part => Math.floor(part / 7) === i).length);\n    }\n    setNumbers([topNumbers, sideNumbers]);\n  }\n\n  function getForbiddenTiles(ship) {\n    let tiles = [...ship];\n    if (ship[1] - ship[0] === 1) {\n      tiles.push(\n        ...(ship[0] > 7 ? ship.map(part => part - 7) : []),\n        ...(ship[0] < 42 ? ship.map(part => part + 7) : []),\n        ...(ship[0] % 7 !== 0 ? [ship[0] - 8, ship[0] - 1, ship[0] + 6] : []),\n        ...(ship[ship.length - 1] % 7 !== 7\n          ? [ship[ship.length - 1] + 8, ship[ship.length - 1] + 1, ship[ship.length - 1] - 6]\n          : [])\n      );\n    } else {\n      tiles.push(\n        ...(ship[0] % 7 !== 0 ? ship.map(part => part - 1) : []),\n        ...(ship[0] % 7 !== 7 ? ship.map(part => part + 1) : []),\n        ...(ship[0] > 7 ? [ship[0] - 8, ship[0] - 7, ship[0] - 6] : []),\n        ...(ship[ship.length - 1] < 42\n          ? [ship[ship.length - 1] + 8, ship[ship.length - 1] + 7, ship[ship.length - 1] + 6]\n          : [])\n      );\n    }\n    return tiles.filter(tile => 0 <= tile && tile <= 48);\n  }\n\n  function placeShip(length, existingShips) {\n    const filledTiles = [...new Set(existingShips.map(ship => getForbiddenTiles(ship)).flat())];\n    const horizontalPossibilities = Array.from(Array(49).keys())\n      .filter(number => number % 7 < 8 - length)\n      .filter(tile => filledTiles.indexOf(tile) === -1);\n    const verticalPossibilities = Array.from(Array(length * 7).keys()).filter(tile => filledTiles.indexOf(tile) === -1);\n\n    function getDirection() {\n      if (horizontalPossibilities.length === 0) {\n        return 'vertical';\n      } else if (verticalPossibilities.length === 0) {\n        return 'horizontal';\n      } else return Math.random() > 0.5 ? 'horizontal' : 'vertical';\n    }\n    const dir = getDirection();\n\n    function getFirstPos() {\n      return dir === 'horizontal'\n        ? horizontalPossibilities[Math.floor(Math.random() * horizontalPossibilities.length)]\n        : verticalPossibilities[Math.floor(Math.random() * verticalPossibilities.length)];\n    }\n\n    const firstPos = getFirstPos();\n    let ship = [firstPos];\n    for (let i = 1; i < length; i++) {\n      ship.push(dir === 'horizontal' ? firstPos + i : firstPos + i * 7);\n    }\n    if (ship.some(tile => filledTiles.indexOf(tile) >= 0)) {\n      ship = placeShip(length, existingShips);\n    }\n    return ship;\n  }\n\n  function selectAsShip(index) {\n    const newSelected = [...selectedAsShips, index];\n    setSelectedAsShips(newSelected);\n    if (\n      newSelected.sort((a, b) => a - b).join('') ===\n      ships\n        .flat()\n        .sort((a, b) => a - b)\n        .join('')\n    ) {\n      setCompleted(true);\n    }\n  }\n\n  function clear() {\n    setSelectedAsShips([]);\n    setSelectedAsWater([]);\n  }\n\n  return (\n    <div className=\"console\">\n      <div className=\"sea-game\">\n        <div\n          className=\"sea\"\n          style={{\n            gridTemplateColumns: `repeat(7, ${tileSideLength}px)`,\n            gridTemplateRows: `repeat(1, ${tileSideLength / 2}px)`\n          }}\n        >\n          {numbers[0].map((number, index) => (\n            <div key={index} className=\"number\">\n              {number}\n            </div>\n          ))}\n        </div>\n        <div className=\"inner-sea\">\n          <div\n            className=\"sea\"\n            style={{\n              gridTemplateColumns: `repeat(1, ${tileSideLength / 2}px)`,\n              gridTemplateRows: `repeat(7, ${tileSideLength}px)`\n            }}\n          >\n            {numbers[1].map((number, index) => (\n              <div key={index} className=\"number\">\n                {number}\n              </div>\n            ))}\n          </div>\n          <div\n            className=\"sea\"\n            style={{\n              gridTemplateColumns: `repeat(7, ${tileSideLength}px)`,\n              gridTemplateRows: `repeat(7, ${tileSideLength}px)`\n            }}\n          >\n            {Array.from(Array(49).keys()).map(tile => {\n              const selected = selectedAsShips.includes(tile)\n                ? 'ship'\n                : selectedAsWater.includes(tile)\n                ? 'water'\n                : null;\n              return (\n                <Tile\n                  key={tile}\n                  tile={tile}\n                  ships={ships}\n                  selectingWater={selectingWater}\n                  initialValue={visiblePositions.includes(tile) ? 'ship' : null}\n                  selectAsShip={selectAsShip}\n                  unselectAsShip={index => setSelectedAsShips(selectedAsShips.filter(selected => selected !== index))}\n                  selectAsWater={index => setSelectedAsWater([...selectedAsWater, index])}\n                  unselectAsWater={index => setSelectedAsWater(selectedAsWater.filter(selected => selected !== index))}\n                  selected={selected}\n                  completed={completed}\n                  toggleMouseDown={toggleMouseDown}\n                  mouseDown={mouseDown}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"controls\">\n        <button onClick={generateShips}>New Game</button>\n        <p>Selecting: {selectingWater ? 'water' : 'ship'}</p>\n        <button className=\"secondary-button\" onClick={() => toggleSelectingWater(!selectingWater)}>\n          Select {selectingWater ? 'ship' : 'water'} instead\n        </button>\n        <p>{completed && \"That's it, well done!\"}</p>\n        {ships.map((ship, index) => (\n          <p key={index} style={{ color: ship.every(part => selectedAsShips.includes(part)) ? 'grey' : 'black' }}>\n            {ship.map(part => 'O')}\n          </p>\n        ))}\n        <button className=\"secondary-button\" onClick={clear}>\n          Start again\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Sea;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu';\nimport Grid from './components/Grid';\nimport Board from './components/Board';\nimport Sea from './components/Sea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n        <Route exact path=\"/games-with-lines\" component={Menu} />\n        <Route exact path=\"/noughts&crosses\" component={Grid} />\n        <Route exact path=\"/connect4\" component={Board} />\n        <Route exact path=\"/battleships\" component={Sea} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}