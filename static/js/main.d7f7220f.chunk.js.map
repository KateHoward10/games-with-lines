{"version":3,"sources":["images/noughts&crosses.png","images/connect4.png","images/battleships.png","components/Nav/styles.js","components/Nav/index.js","components/Menu.js","components/Button/index.js","components/Noughts/Box.js","combinations.js","components/Noughts/index.js","components/Connect4/Cell.js","components/Connect4/Arrow.js","components/Connect4/index.js","components/Battleships/Tile/styles.js","components/Battleships/Tile/index.js","components/Battleships/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Link","styled","NavLink","NavBar","nav","Nav","to","Component","Menu","className","src","require","alt","Button","button","colour","Box","box","mySymbol","computerSymbol","selectBox","onClick","emptyBoard","Array","from","fill","possibleThrees","emptyCells","possibleFours","Noughts","state","win","boxes","winningThree","Math","round","random","playing","reset","setState","start","myTurn","Boolean","finishTurn","changeSymbol","checkForThree","player","some","combination","every","boxNumber","find","filter","length","select","index","setTimeout","key","computerChoice","indices","Object","keys","combos","floor","this","boxSideLength","min","window","innerWidth","innerHeight","style","gridTemplateColumns","gridTemplateRows","width","height","x1","y1","x2","y2","map","Cell","myColour","computerColour","cellSideLength","backgroundColor","borderRadius","Arrow","props","hidden","active","selectColumn","parseFloat","fontSize","fontWeight","cursor","display","Connect4","cells","winner","winningCombo","rolling","computerTurn","changeColour","findAvailableCells","columnNumber","cell","sort","a","b","findBottomNumber","availableCells","max","checkForFour","cellNumber","roll","finishRoll","numbers","lastNumber","reachBottomCell","array","interval","callback","i","next","slowLoop","computerColumnChoice","availableColumns","slice","SeaTile","div","selected","BitOfShip","visible","completed","css","position","direction","solo","Tile","ships","tile","selectingWater","initialValue","selectAsShip","unselectAsShip","selectAsWater","unselectAsWater","mouseDown","toggleMouseDown","thisShip","ship","includes","indexInShip","indexOf","setTile","onMouseDown","onMouseUp","onMouseEnter","Battleships","tileSideLength","lengths","useState","setShips","setNumbers","toggleSelectingWater","visiblePositions","setVisiblePositions","selectedAsShips","setSelectedAsShips","selectedAsWater","setSelectedAsWater","setCompleted","placeShip","existingShips","filledTiles","Set","tiles","push","part","getForbiddenTiles","flat","horizontalPossibilities","number","verticalPossibilities","dir","firstPos","newSelected","join","newShips","latestShip","randomised","topNumbers","sideNumbers","color","App","exact","path","component","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8KAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,0qBCGpC,IAAMC,EAAOC,YAAOC,IAAPD,CAAH,KAUJE,EAASF,IAAOG,IAAV,KCQJC,E,uKAhBX,OACE,kBAACF,EAAD,KACE,kBAACH,EAAD,CAAMM,GAAG,oBAAT,WAGA,kBAACN,EAAD,CAAMM,GAAG,aAAT,aAGA,kBAACN,EAAD,CAAMM,GAAG,gBAAT,oB,GAVUC,aCmBHC,MAnBf,WACE,OACE,yBAAKC,UAAU,QACb,kBAAC,IAAD,CAASH,GAAG,mBAAmBG,UAAU,gBAAzC,oBAEE,yBAAKA,UAAU,UAAUC,IAAKC,EAAQ,IAAkCC,IAAI,uBAE9E,kBAAC,IAAD,CAASN,GAAG,YAAYG,UAAU,gBAAlC,YAEE,yBAAKA,UAAU,UAAUC,IAAKC,EAAQ,IAA2BC,IAAI,eAEvE,kBAAC,IAAD,CAASN,GAAG,eAAeG,UAAU,gBAArC,cAEE,yBAAKA,UAAU,UAAUC,IAAKC,EAAQ,IAA8BC,IAAI,mBCGjEC,EAjBAZ,IAAOa,QAAO,gBAAGC,EAAH,EAAGA,OAAH,sCACPA,GAAU,QADH,uBAEP,WAAXA,EAAsB,OAAS,OAFb,0SCUdC,EAVH,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,eAAgBC,EAAlC,EAAkCA,UAAlC,OACX,yBAAKX,UAAU,MAAMY,QAASD,GACpB,OAARH,EACA,0BAAMR,UAAU,YAAYS,GACjB,aAARD,EACH,0BAAMR,UAAU,kBAAkBU,GAC/B,OCROG,EAAa,WACxB,OAAOC,MAAMC,KAAKD,MAAM,GAAGE,KAAK,MAGrBC,EAAiB,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAEtGC,EAAa,WACxB,OAAOJ,MAAMC,KAAKD,MAAM,IAAIE,KAAK,MAGtBG,EAAgB,CAC3B,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACV,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC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","file":"static/js/main.d7f7220f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noughts&crosses.6b73ade5.png\";","module.exports = __webpack_public_path__ + \"static/media/connect4.de3839ad.png\";","module.exports = __webpack_public_path__ + \"static/media/battleships.555f39a7.png\";","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  font-weight: bold;\n  color: white;\n  text-decoration: none;\n  margin: 5px;\n  @media screen and (min-width: 800px) {\n    transform: rotate(-90deg);\n  }\n`;\n\nexport const NavBar = styled.nav`\n  background-color: indigo;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  padding: 10px;\n  @media screen and (min-width: 800px) {\n    flex-direction: column;\n  }\n  \n`;","import React, { Component } from 'react';\nimport { NavBar, Link } from './styles';\n\nclass Nav extends Component {\n  render() {\n    return (\n      <NavBar>\n        <Link to=\"/noughts&crosses\">\n          0s & Xs\n        </Link>\n        <Link to=\"/connect4\">\n          Connect 4\n        </Link>\n        <Link to=\"/battleships\">\n          Battleships\n        </Link>\n      </NavBar>\n    );\n  }\n}\n\nexport default Nav;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Menu() {\n  return (\n    <div className=\"menu\">\n      <NavLink to=\"/noughts&crosses\" className=\"preview-link\">\n        Noughts & Crosses\n        <img className=\"preview\" src={require('../images/noughts&crosses.png')} alt=\"Noughts & Crosses\" />\n      </NavLink>\n      <NavLink to=\"/connect4\" className=\"preview-link\">\n        Connect 4\n        <img className=\"preview\" src={require('../images/connect4.png')} alt=\"Connect 4\" />\n      </NavLink>\n      <NavLink to=\"/battleships\" className=\"preview-link\">\n        Battleships\n        <img className=\"preview\" src={require('../images/battleships.png')} alt=\"Battleships\" />\n      </NavLink>\n    </div>\n  );\n}\n\nexport default Menu;\n","import styled from 'styled-components';\n\nconst Button = styled.button(({ colour }) =>`\n  background-color: ${colour || 'green'};\n  color: ${colour === 'yellow' ? '#000' : '#fff'};\n  font-family: 'Orbitron', sans-serif;\n  font-size: 16px;\n  font-weight: bold;\n  border-radius: 5px;\n  border: 2px solid black;\n  padding: 5px;\n  margin: 5px;\n  -webkit-backface-visibility: hidden;\n  &:hover {\n    box-shadow: 0 0 1px 1px grey;\n    transform: scale(0.95);\n  }\n`);\n\nexport default Button;","import React from 'react';\n\nconst Box = ({ box, mySymbol, computerSymbol, selectBox }) => (\n\t<div className=\"box\" onClick={selectBox}>\n\t\t{box === 'me' ? (\n\t\t\t<span className=\"mySymbol\">{mySymbol}</span>\n\t\t) : box === 'computer' ? (\n\t\t\t<span className=\"computerSymbol\">{computerSymbol}</span>\n\t\t) : null}\n\t</div>\n);\n\nexport default Box;\n","export const emptyBoard = () => {\n  return Array.from(Array(9).fill(''));\n}\n  \nexport const possibleThrees = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nexport const emptyCells = () => {\n  return Array.from(Array(42).fill(''));\n}\n\nexport const possibleFours = [\n  [0, 1, 2, 3],\n  [1, 2, 3, 4],\n  [2, 3, 4, 5],\n  [3, 4, 5, 6],\n  [7, 8, 9, 10],\n  [8, 9, 10, 11],\n  [9, 10, 11, 12],\n  [10, 11, 12, 13],\n  [14, 15, 16, 17],\n  [15, 16, 17, 18],\n  [16, 17, 18, 19],\n  [17, 18, 19, 20],\n  [21, 22, 23, 24],\n  [22, 23, 24, 25],\n  [23, 24, 25, 26],\n  [24, 25, 26, 27],\n  [28, 29, 30, 31],\n  [29, 30, 31, 32],\n  [30, 31, 32, 33],\n  [31, 32, 33, 34],\n  [35, 36, 37, 38],\n  [36, 37, 38, 39],\n  [37, 38, 39, 40],\n  [38, 39, 40, 41],\n  [0, 7, 14, 21],\n  [7, 14, 21, 28],\n  [14, 21, 28, 35],\n  [1, 8, 15, 22],\n  [8, 15, 22, 29],\n  [15, 22, 29, 36],\n  [2, 9, 16, 23],\n  [9, 16, 23, 30],\n  [16, 23, 30, 37],\n  [3, 10, 17, 24],\n  [10, 17, 24, 31],\n  [17, 24, 31, 38],\n  [4, 11, 18, 25],\n  [11, 18, 25, 32],\n  [18, 25, 32, 39],\n  [5, 12, 19, 26],\n  [12, 19, 26, 33],\n  [19, 26, 33, 40],\n  [6, 13, 20, 27],\n  [13, 20, 27, 34],\n  [20, 27, 34, 41],\n  [0, 8, 16, 24],\n  [1, 9, 17, 25],\n  [2, 10, 18, 26],\n  [3, 11, 19, 27],\n  [7, 15, 23, 31],\n  [8, 16, 24, 32],\n  [9, 17, 25, 33],\n  [10, 18, 26, 34],\n  [14, 22, 30, 38],\n  [15, 23, 31, 39],\n  [16, 24, 32, 40],\n  [17, 25, 33, 41],\n  [21, 15, 9, 3],\n  [22, 16, 10, 4],\n  [23, 17, 11, 5],\n  [24, 18, 12, 6],\n  [28, 22, 16, 10],\n  [29, 23, 17, 11],\n  [30, 24, 18, 12],\n  [31, 25, 19, 13],\n  [35, 29, 23, 17],\n  [36, 30, 24, 18],\n  [37, 31, 25, 19],\n  [38, 32, 26, 20]\n];\n","import React, { Component } from 'react';\nimport Button from '../Button';\nimport Box from './Box';\nimport { emptyBoard, possibleThrees } from '../../combinations';\n\nclass Noughts extends Component {\n  state = {\n    win: '',\n    boxes: emptyBoard(),\n    winningThree: [],\n    mySymbol: ['O', 'X'][Math.round(Math.random())],\n    playing: false\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        win: '',\n        boxes: emptyBoard(),\n        winningThree: [],\n        mySymbol: ['O', 'X'][Math.round(Math.random())],\n        playing: false\n      }\n    );\n  };\n\n  start = () => {\n    this.setState(\n      {\n        win: '',\n        boxes: emptyBoard(),\n        winningThree: [],\n        myTurn: Boolean(Math.random() < 0.5),\n        playing: true\n      },\n      () => {\n        if (!this.state.myTurn) {\n          this.finishTurn();\n        }\n      }\n    );\n  };\n\n  changeSymbol = () => {\n    const { mySymbol } = this.state;\n    this.setState({\n      mySymbol: mySymbol === 'X' ? 'O' : 'X'\n    });\n  };\n\n  checkForThree = player => {\n    const { boxes } = this.state;\n    if (possibleThrees.some(combination => combination.every(boxNumber => boxes[boxNumber] === player))) {\n      this.setState({\n        win: player,\n        winningThree: possibleThrees.find(combination =>\n          combination.every(boxNumber => boxes[boxNumber] === player)\n        ),\n        playing: false\n      });\n    } else if (boxes.filter(box => box !== '').length > 8) {\n      this.setState({ win: 'draw', playing: false });\n    }\n  };\n\n  select = (index, player) => {\n    const { win, boxes, myTurn } = this.state;\n    if (win !== '') {\n      return;\n    } else {\n      boxes[index] = player;\n      this.setState({ boxes }, () => this.checkForThree(player));\n      setTimeout(() => this.setState({ myTurn: !myTurn }), 500);\n    }\n  };\n\n  selectBox = key => {\n    const { win, boxes, myTurn, playing } = this.state;\n    if (playing && myTurn && boxes[key] === '' && win === '') {\n      this.select(key, 'me');\n      this.checkForThree('me');\n      if (win !== '') {\n        return;\n      } else {\n        this.finishTurn();\n      }\n    }\n  };\n\n  finishTurn = () => {\n    const { boxes } = this.state;\n    const indices = Object.keys(boxes).filter(key => boxes[key] === '');\n    let computerChoice;\n    if (\n      possibleThrees.some(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'computer').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      )\n    ) {\n      const combos = possibleThrees.filter(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'computer').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber] === '');\n    } else if (\n      possibleThrees.some(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'me').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      )\n    ) {\n      const combos = possibleThrees.filter(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'me').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber] === '');\n    } else {\n      computerChoice = indices[Math.floor(Math.random() * indices.length)];\n    }\n    setTimeout(this.select, 500, computerChoice, 'computer');\n  };\n\n  render() {\n    const { mySymbol, win, winningThree, boxes, myTurn, playing } = this.state;\n    const computerSymbol = mySymbol === 'X' ? 'O' : 'X';\n    const boxSideLength = Math.min(window.innerWidth, window.innerHeight) / 4;\n\n    return !playing && win === '' ? (\n      <div className=\"setup\">\n        <div className=\"option-picker\">\n          <p>You are: {mySymbol}s</p>\n          <Button onClick={this.changeSymbol} colour='yellow'>\n            Choose {computerSymbol}s\n          </Button>\n        </div>\n        <Button onClick={this.start}>Start Game</Button>\n      </div>\n    ) : (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div\n            className=\"container\"\n            style={{\n              gridTemplateColumns: `repeat(3, ${boxSideLength}px)`,\n              gridTemplateRows: `repeat(3, ${boxSideLength}px)`\n            }}\n          >\n            {winningThree.length > 0 ? (\n              <svg className=\"path-container\" width={boxSideLength * 3} height={boxSideLength * 3}>\n                <line\n                  x1={(winningThree[0] % 3) * boxSideLength + boxSideLength / 2}\n                  y1={Math.floor(winningThree[0] / 3) * boxSideLength + boxSideLength / 2}\n                  x2={(winningThree[2] % 3) * boxSideLength + boxSideLength / 2}\n                  y2={Math.floor(winningThree[2] / 3) * boxSideLength + boxSideLength / 2}\n                />\n              </svg>\n            ) : null}\n            {boxes.map((index, key) => (\n              <Box\n                index={index}\n                key={key}\n                win={win}\n                box={boxes[key]}\n                mySymbol={mySymbol}\n                computerSymbol={computerSymbol}\n                selectBox={() => this.selectBox(key)}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <p>{myTurn ? 'Your turn' : \"The computer's turn\"}</p>\n          <Button onClick={this.reset}>New Game</Button>\n          {win === 'draw' ? (\n            <h2>It's a draw</h2>\n          ) : win === 'me' ? (\n            <h2>You win!</h2>\n          ) : win === 'computer' ? (\n            <h2>The computer wins!</h2>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noughts;\n","import React from 'react';\n\nconst Cell = ({ fill, myColour, computerColour, cellSideLength }) => (\n  <div className=\"cell\">\n    <div\n      className=\"circle\"\n      style={{\n        width: `${cellSideLength * 0.75}px`,\n        height: `${cellSideLength * 0.75}px`,\n        backgroundColor: fill === 'me' ? myColour : fill === 'computer' ? computerColour : '#80acf2',\n        borderRadius: '50%'\n      }}\n    />\n  </div>\n);\n\nexport default Cell;\n","import React from 'react';\n\nfunction Arrow(props) {\n  const { cellSideLength, hidden, active, index, selectColumn } = props;\n\n  function selectArrow() {\n    if (!hidden && active) {\n      selectColumn(parseFloat(index, 10), 'me');\n    }\n  }\n\n  return (\n    <div\n      onClick={selectArrow}\n      style={{\n        fontSize: `${cellSideLength / 2}px`,\n        fontWeight: 'bold',\n        width: `${cellSideLength}px`,\n        cursor: 'pointer'\n      }}\n    >\n      <span style={{ display: hidden ? 'none' : 'block' }}>↓</span>\n    </div>\n  );\n}\n\nexport default Arrow;\n","import React, { Component } from 'react';\nimport Button from '../Button';\nimport Cell from './Cell';\nimport Arrow from './Arrow';\nimport { emptyCells, possibleFours } from '../../combinations';\n\nclass Connect4 extends Component {\n  state = {\n    cells: emptyCells(),\n    winner: '',\n    winningCombo: [],\n    myColour: ['red', 'yellow'][Math.round(Math.random())],\n    playing: false,\n    rolling: false\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        cells: emptyCells(),\n        winner: '',\n        winningCombo: [],\n        playing: false,\n        rolling: false\n      }\n    );\n  };\n\n  start = () => {\n    this.setState(\n      {\n        cells: emptyCells(),\n        winner: '',\n        winningCombo: [],\n        myTurn: Boolean(Math.random() < 0.5),\n        playing: true,\n        rolling: false\n      },\n      () => {\n        if (!this.state.myTurn) {\n          this.computerTurn();\n        }\n      }\n    );\n  };\n\n  changeColour = () => {\n    const { myColour } = this.state;\n    this.setState({\n      myColour: myColour === 'red' ? 'yellow' : 'red'\n    });\n  };\n\n  findAvailableCells = columnNumber => {\n    const columnCells = [\n      41 - 6 + columnNumber,\n      41 - 13 + columnNumber,\n      41 - 20 + columnNumber,\n      41 - 27 + columnNumber,\n      41 - 34 + columnNumber,\n      columnNumber\n    ];\n    const availableCells = columnCells.filter(\n      cell => this.state.cells[cell] === ''\n    );\n    return availableCells.sort((a, b) => {\n      return a - b;\n    });\n  };\n\n  findBottomNumber = columnNumber => {\n    const availableCells = this.findAvailableCells(columnNumber);\n    return Math.max(...availableCells);\n  };\n\n  checkForFour = player => {\n    const { cells } = this.state;\n    // If any combination achieved by same player\n    if (\n      possibleFours.some(combination => combination.every(cellNumber => cells[cellNumber] === player))\n    ) {\n      this.setState({\n        playing: false,\n        winner: player,\n        winningCombo: possibleFours.find(combination =>\n          combination.every(cellNumber => cells[cellNumber] === player)\n        )\n      });\n      // If every cell filled by someone's counter\n    } else if (cells.every(cell => cell !== '')) {\n      this.setState({ playing: false, winner: 'draw' });\n    }\n  };\n\n  selectColumn = (columnNumber, player) => {\n    const { playing, winner, myTurn } = this.state;\n    if (!playing || winner !== '') {\n      return;\n    } else {\n      this.roll(columnNumber, player, () => {\n        this.setState({ myTurn: !myTurn, rolling: false }, () => this.checkForFour(player));\n        if (player === 'me' && playing) {\n          setTimeout(this.computerTurn, Math.random() * 2000);\n        }\n      });\n    }\n  };\n\n  roll = (columnNumber, player, finishRoll) => {\n    const { cells, rolling } = this.state;\n    if (rolling) return;\n    const numbers = this.findAvailableCells(columnNumber);\n    const lastNumber = this.findBottomNumber(columnNumber);\n    this.setState({ rolling: true });\n    const reachBottomCell = () => {\n      cells[lastNumber] = player;\n      // For some reason this is needed to make sure it doesn't think you've scored a vertical 4 with only 3 counters\n      if (lastNumber >= 7) {\n        cells[lastNumber - 7] = '';\n      }\n      this.setState({ cells }, () => finishRoll());\n    };\n    const slowLoop = (array, interval, callback) => {\n      var i = 0;\n      next();\n      function next() {\n        if (callback(array[i], i) !== false) {\n          if (++i < array.length - 1) {\n            setTimeout(next, interval);\n          } else {\n            reachBottomCell();\n          }\n        }\n      }\n    };\n    if (numbers.length === 1 && numbers[0] === lastNumber) {\n      reachBottomCell();\n    } else {\n      slowLoop(numbers, 100, i => {\n        cells[i] = player;\n        this.setState({ cells });\n        setTimeout(() => {\n          cells[i] = '';\n          this.setState({ cells });\n        }, 100);\n      });\n    }\n  };\n\n  computerTurn = () => {\n    const { cells } = this.state;\n    // Find columns which are not full\n    const availableColumns = Object.keys(cells.slice(0, 7)).filter(\n      key => this.findBottomNumber(parseFloat(key, 10)) > 0\n    );\n    let computerColumnChoice;\n    // If there are any 3/4s for the computer\n    if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber] === '') % 7;\n      // If there are any 3/4s for me\n    } else if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber] === '') % 7;\n    } else {\n      computerColumnChoice = parseFloat(availableColumns[Math.floor(Math.random() * availableColumns.length)], 10);\n    }\n    this.selectColumn(computerColumnChoice, 'computer');\n  };\n\n  render() {\n    const { playing, myTurn, myColour, winner, cells, winningCombo, rolling } = this.state;\n    const computerColour = myColour === 'red' ? 'yellow' : 'red';\n    const cellSideLength = Math.min(window.innerWidth, window.innerHeight) / 8;\n\n    return !playing && winner === '' ? (\n      <div className=\"setup\">\n        <div className=\"option-picker\">\n          <p>Your colour: {myColour}</p>\n          <Button\n            onClick={this.changeColour}\n            colour={computerColour}\n          >\n            Choose {computerColour}\n          </Button>\n        </div>\n        <Button onClick={this.start}>Start Game</Button>\n      </div>\n    ) : (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div className=\"arrows\" style={{ gridTemplateColumns: `repeat(7, ${cellSideLength}px)` }}>\n            {Object.keys(cells.slice(0, 7)).map(key => (\n              <Arrow\n                index={key}\n                key={key}\n                hidden={this.findBottomNumber(parseFloat(key, 10)) < 0}\n                selectColumn={this.selectColumn}\n                active={!rolling && myTurn}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n          <div\n            className=\"board\"\n            style={{\n              gridTemplateRows: `repeat(6, ${cellSideLength}px)`,\n              gridTemplateColumns: `repeat(7, ${cellSideLength}px)`\n            }}\n          >\n            <svg className=\"path-container\" width={cellSideLength * 7} height={cellSideLength * 6}>\n              {winningCombo.length === 4 && (\n                <line\n                  x1={(winningCombo[0] % 7) * cellSideLength + cellSideLength / 2}\n                  y1={Math.floor(winningCombo[0] / 7) * cellSideLength + cellSideLength / 2}\n                  x2={(winningCombo[3] % 7) * cellSideLength + cellSideLength / 2}\n                  y2={Math.floor(winningCombo[3] / 7) * cellSideLength + cellSideLength / 2}\n                />\n              )}\n            </svg>\n            {cells.map((cell, index) => (\n              <Cell\n                index={index}\n                key={index}\n                fill={cell}\n                myColour={myColour}\n                computerColour={computerColour}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <Button onClick={this.reset}>New Game</Button>\n          {playing && (\n            <p>{myTurn ? 'Your turn' : \"The computer's turn\"}</p>\n          )}\n          {winner === 'me' ? (\n            <h2>You win!</h2>\n          ) : winner === 'computer' ? (\n            <h2>The computer wins!</h2>\n          ) : winner === 'draw' ? (\n            <h2>It's a draw</h2>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Connect4;\n","import styled, { css } from 'styled-components';\n\nexport const SeaTile = styled.div`\n  background-color: ${props => (props.selected ? 'blue' : 'transparent')};\n  border: 1px solid black;\n  display: flex;\n  padding: 10px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const BitOfShip = styled.div`\n  background-color: yellow;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  border: 1px solid grey;\n  ${props =>\n    (props.visible || props.completed) &&\n    css`\n      border-top-left-radius: ${props.position === 'start' ? '50%' : 0};\n      border-top-right-radius: ${(props.position === 'start' && props.direction === 'vertical') ||\n      (props.position === 'end' && props.direction === 'horizontal')\n        ? '50%'\n        : 0};\n      border-bottom-left-radius: ${(props.position === 'start' && props.direction === 'horizontal') ||\n      (props.position === 'end' && props.direction === 'vertical')\n        ? '50%'\n        : 0};\n      border-bottom-right-radius: ${props.position === 'end' ? '50%' : 0};\n    `}\n  ${props =>\n    (props.visible || props.completed) &&\n    props.solo &&\n    css`\n      border-radius: 50%;\n    `}\n`;\n","import React from 'react';\nimport { SeaTile, BitOfShip } from './styles';\n\nfunction Tile({\n  ships,\n  tile,\n  selectingWater,\n  initialValue,\n  selectAsShip,\n  unselectAsShip,\n  selectAsWater,\n  unselectAsWater,\n  selected,\n  completed,\n  mouseDown,\n  toggleMouseDown\n}) {\n  const thisShip = ships.find(ship => ship.includes(tile));\n  const indexInShip = thisShip ? thisShip.indexOf(tile) : null;\n  const solo = thisShip && thisShip.length === 1;\n  const position =\n    thisShip && !solo ? (indexInShip === 0 ? 'start' : indexInShip === thisShip.length - 1 ? 'end' : 'middle') : null;\n\n  function getDirection() {\n    if (position === 'start') {\n      return thisShip[1] - tile === 7 ? 'vertical' : 'horizontal';\n    } else if (position === 'end') {\n      return tile - thisShip[indexInShip - 1] === 7 ? 'vertical' : 'horizontal';\n    }\n    return null;\n  }\n\n  function setTile() {\n    if (initialValue) return;\n    if (selected) {\n      selected === 'ship' ? unselectAsShip(tile) : unselectAsWater(tile);\n    } else {\n      selectingWater ? selectAsWater(tile) : selectAsShip(tile);\n    }\n  }\n\n  return (\n    <SeaTile\n      onMouseDown={() => {\n        toggleMouseDown(true);\n        setTile();\n      }}\n      onMouseUp={() => toggleMouseDown(false)}\n      onMouseEnter={() => {\n        if (mouseDown) setTile();\n      }}\n      selected={initialValue || selected}\n    >\n      {(initialValue === 'ship' || selected === 'ship') && (\n        <BitOfShip\n          position={position}\n          direction={getDirection()}\n          solo={solo}\n          visible={initialValue === 'ship'}\n          completed={completed}\n        >\n          {!initialValue && !completed && '?'}\n        </BitOfShip>\n      )}\n    </SeaTile>\n  );\n}\n\nexport default Tile;\n","import React, { useState } from 'react';\nimport Button from '../Button';\nimport Tile from './Tile';\n\nfunction Battleships() {\n  const tileSideLength = Math.min(window.innerWidth, window.innerHeight) / 9;\n  const lengths = [4, 3, 2, 2, 1, 1];\n  const [ships, setShips] = useState([]);\n  const [numbers, setNumbers] = useState([[], []]);\n  const [selectingWater, toggleSelectingWater] = useState(true);\n  const [visiblePositions, setVisiblePositions] = useState([]);\n  const [selectedAsShips, setSelectedAsShips] = useState([]);\n  const [selectedAsWater, setSelectedAsWater] = useState([]);\n  const [completed, setCompleted] = useState(false);\n  const [mouseDown, toggleMouseDown] = useState(false);\n\n  function generateShips() {\n    let newShips = [];\n    setNumbers([[], []]);\n    setSelectedAsWater([]);\n    setCompleted(false);\n    for (let i = 0; i < lengths.length; i++) {\n      let latestShip = placeShip(lengths[i], newShips);\n      newShips.push(latestShip);\n    }\n    setShips(newShips);\n    let randomised = newShips.flat().sort(() => Math.random() - 0.5);\n    setVisiblePositions(randomised.slice(-3));\n    setSelectedAsShips(randomised.slice(-3));\n    let topNumbers = [];\n    let sideNumbers = [];\n    for (let i = 0; i < 7; i++) {\n      topNumbers.push(newShips.flat().filter(part => part % 7 === i).length);\n      sideNumbers.push(newShips.flat().filter(part => Math.floor(part / 7) === i).length);\n    }\n    setNumbers([topNumbers, sideNumbers]);\n  }\n\n  function getForbiddenTiles(ship) {\n    let tiles = [...ship];\n    if (ship[1] - ship[0] === 1) {\n      tiles.push(\n        ...(ship[0] > 7 ? ship.map(part => part - 7) : []),\n        ...(ship[0] < 42 ? ship.map(part => part + 7) : []),\n        ...(ship[0] % 7 !== 0 ? [ship[0] - 8, ship[0] - 1, ship[0] + 6] : []),\n        ...(ship[ship.length - 1] % 7 !== 7\n          ? [ship[ship.length - 1] + 8, ship[ship.length - 1] + 1, ship[ship.length - 1] - 6]\n          : [])\n      );\n    } else {\n      tiles.push(\n        ...(ship[0] % 7 !== 0 ? ship.map(part => part - 1) : []),\n        ...(ship[0] % 7 !== 7 ? ship.map(part => part + 1) : []),\n        ...(ship[0] > 7 ? [ship[0] - 8, ship[0] - 7, ship[0] - 6] : []),\n        ...(ship[ship.length - 1] < 42\n          ? [ship[ship.length - 1] + 8, ship[ship.length - 1] + 7, ship[ship.length - 1] + 6]\n          : [])\n      );\n    }\n    return tiles.filter(tile => 0 <= tile && tile <= 48);\n  }\n\n  function placeShip(length, existingShips) {\n    const filledTiles = [...new Set(existingShips.map(ship => getForbiddenTiles(ship)).flat())];\n    const horizontalPossibilities = Array.from(Array(49).keys())\n      .filter(number => number % 7 < 8 - length)\n      .filter(tile => filledTiles.indexOf(tile) === -1);\n    const verticalPossibilities = Array.from(Array(length * 7).keys()).filter(tile => filledTiles.indexOf(tile) === -1);\n\n    function getDirection() {\n      if (horizontalPossibilities.length === 0) {\n        return 'vertical';\n      } else if (verticalPossibilities.length === 0) {\n        return 'horizontal';\n      } else return Math.random() > 0.5 ? 'horizontal' : 'vertical';\n    }\n    const dir = getDirection();\n\n    function getFirstPos() {\n      return dir === 'horizontal'\n        ? horizontalPossibilities[Math.floor(Math.random() * horizontalPossibilities.length)]\n        : verticalPossibilities[Math.floor(Math.random() * verticalPossibilities.length)];\n    }\n\n    const firstPos = getFirstPos();\n    let ship = [firstPos];\n    for (let i = 1; i < length; i++) {\n      ship.push(dir === 'horizontal' ? firstPos + i : firstPos + i * 7);\n    }\n    if (ship.some(tile => filledTiles.indexOf(tile) >= 0)) {\n      ship = placeShip(length, existingShips);\n    }\n    return ship;\n  }\n\n  function selectAsShip(index) {\n    const newSelected = [...selectedAsShips, index];\n    setSelectedAsShips(newSelected);\n    if (\n      newSelected.sort((a, b) => a - b).join('') ===\n      ships\n        .flat()\n        .sort((a, b) => a - b)\n        .join('')\n    ) {\n      setCompleted(true);\n    }\n  }\n\n  function clear() {\n    setSelectedAsShips([]);\n    setSelectedAsWater([]);\n  }\n\n  return (\n    <div className=\"console\">\n      <div className=\"sea-game\">\n        <div\n          className=\"sea\"\n          style={{\n            gridTemplateColumns: `repeat(7, ${tileSideLength}px)`,\n            gridTemplateRows: `repeat(1, ${tileSideLength / 2}px)`\n          }}\n        >\n          {numbers[0].map((number, index) => (\n            <div key={index} className=\"number\">\n              {number}\n            </div>\n          ))}\n        </div>\n        <div className=\"inner-sea\">\n          <div\n            className=\"sea\"\n            style={{\n              gridTemplateColumns: `repeat(1, ${tileSideLength / 2}px)`,\n              gridTemplateRows: `repeat(7, ${tileSideLength}px)`\n            }}\n          >\n            {numbers[1].map((number, index) => (\n              <div key={index} className=\"number\">\n                {number}\n              </div>\n            ))}\n          </div>\n          <div\n            className=\"sea\"\n            style={{\n              gridTemplateColumns: `repeat(7, ${tileSideLength}px)`,\n              gridTemplateRows: `repeat(7, ${tileSideLength}px)`\n            }}\n          >\n            {Array.from(Array(49).keys()).map(tile => {\n              const selected = selectedAsShips.includes(tile)\n                ? 'ship'\n                : selectedAsWater.includes(tile)\n                ? 'water'\n                : null;\n              return (\n                <Tile\n                  key={tile}\n                  tile={tile}\n                  ships={ships}\n                  selectingWater={selectingWater}\n                  initialValue={visiblePositions.includes(tile) ? 'ship' : null}\n                  selectAsShip={selectAsShip}\n                  unselectAsShip={index => setSelectedAsShips(selectedAsShips.filter(selected => selected !== index))}\n                  selectAsWater={index => setSelectedAsWater([...selectedAsWater, index])}\n                  unselectAsWater={index => setSelectedAsWater(selectedAsWater.filter(selected => selected !== index))}\n                  selected={selected}\n                  completed={completed}\n                  toggleMouseDown={toggleMouseDown}\n                  mouseDown={mouseDown}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"controls\">\n        <Button onClick={generateShips}>New Game</Button>\n        <p>Selecting: {selectingWater ? 'water' : 'ship'}</p>\n        <Button colour=\"purple\" onClick={() => toggleSelectingWater(!selectingWater)}>\n          Select {selectingWater ? 'ship' : 'water'} instead\n        </Button>\n        <p>{completed && \"That's it, well done!\"}</p>\n        {ships.map((ship, index) => (\n          <p key={index} style={{ color: ship.every(part => selectedAsShips.includes(part)) ? 'grey' : 'black' }}>\n            {ship.map(part => 'O')}\n          </p>\n        ))}\n        <Button colour=\"purple\" onClick={clear}>\n          Start again\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Battleships;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu';\nimport Noughts from './components/Noughts';\nimport Connect4 from './components/Connect4';\nimport Battleships from './components/Battleships';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Switch>\n        <Route exact path=\"/games-with-lines\" component={Menu} />\n        <Route exact path=\"/noughts&crosses\" component={Noughts} />\n        <Route exact path=\"/connect4\" component={Connect4} />\n        <Route exact path=\"/battleships\" component={Battleships} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}