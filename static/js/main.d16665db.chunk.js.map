{"version":3,"sources":["Box.js","combinations.js","Grid.js","Cell.js","Arrow.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["Box","_ref","box","mySymbol","computerSymbol","selectBox","react_default","a","createElement","className","onClick","selectedBy","possibleThrees","possibleFours","Grid","state","win","boxes","index","winningThree","playing","reset","_this","setState","myTurn","Boolean","Math","random","round","finishTurn","changeSymbol","checkForThree","player","some","combination","every","boxNumber","find","filter","length","select","_this$state","setTimeout","key","_this$state2","computerChoice","indices","Object","keys","combos","floor","_this2","this","switchGame","props","_this$state3","boxSideLength","min","window","innerWidth","innerHeight","style","gridTemplateColumns","concat","gridTemplateRows","width","height","x1","y1","x2","y2","map","src_Box","Fragment","backgroundColor","color","Component","Cell","fill","myColour","computerColour","cellSideLength","borderRadius","Arrow","hidden","active","selectColumn","parseFloat","fontSize","fontWeight","cursor","display","Board","cells","winner","winningCombo","rolling","computerTurn","changeColour","findAvailableCells","columnNumber","cell","sort","b","findBottomNumber","availableCells","max","apply","toConsumableArray","checkForFour","cellNumber","roll","finishRoll","numbers","lastNumber","reachBottomCell","array","interval","callback","i","next","slowLoop","computerColumnChoice","availableColumns","slice","src_Arrow","src_Cell","App","_useState","useState","_useState2","slicedToArray","connect4","toggleConnect4","src_Board","src_Grid","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d16665db.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Box = ({ box, mySymbol, computerSymbol, selectBox }) => (\n\t<div className=\"box\" onClick={selectBox}>\n\t\t{box.selectedBy === 'me' ? (\n\t\t\t<span className=\"mySymbol\">{mySymbol}</span>\n\t\t) : box.selectedBy === 'computer' ? (\n\t\t\t<span className=\"computerSymbol\">{computerSymbol}</span>\n\t\t) : null}\n\t</div>\n);\n\nexport default Box;\n","\nexport const possibleThrees = [\n  [0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]\n];\n\nexport const possibleFours = [\n  [0,1,2,3],[1,2,3,4],[2,3,4,5],[3,4,5,6],\n  [7,8,9,10],[8,9,10,11],[9,10,11,12],[10,11,12,13],\n  [14,15,16,17],[15,16,17,18],[16,17,18,19],[17,18,19,20],\n  [21,22,23,24],[22,23,24,25],[23,24,25,26],[24,25,26,27],\n  [28,29,30,31],[29,30,31,32],[30,31,32,33],[31,32,33,34],\n  [35,36,37,38],[36,37,38,39],[37,38,39,40],[38,39,40,41],\n  [0,7,14,21],[7,14,21,28],[14,21,28,35],\n  [1,8,15,22],[8,15,22,29],[15,22,29,36],\n  [2,9,16,23],[9,16,23,30],[16,23,30,37],\n  [3,10,17,24],[10,17,24],[17,24,31,38],\n  [4,11,18,25],[11,18,25,32],[18,25,32,39],\n  [5,12,19,26],[12,19,26,33],[19,26,33,40],\n  [6,13,20,27],[13,20,27,34],[20,27,34,41],\n  [0,8,16,24],[1,9,17,25],[2,10,18,26],[3,11,19,27],\n  [7,15,23,31],[8,16,24,32],[9,17,25,33],[10,18,26,34],\n  [14,22,30,38],[15,23,31,39],[16,24,32,40],[17,25,33,41],\n  [21,15,9,3],[22,16,10,4],[23,17,11,5],[24,18,12,6],\n  [28,22,16,10],[29,23,17,11],[30,24,18,12],[31,25,19,13],\n  [35,29,23,17],[36,30,24,18],[37,31,25,19],[38,32,26,20]\n]","import React, { Component } from 'react';\nimport Box from './Box';\nimport { possibleThrees } from './combinations';\n\nclass Grid extends Component {\n  state = {\n    win: \"\",\n    boxes: [\n      {index: 0, selectedBy: \"\"},\n      {index: 1, selectedBy: \"\"},\n      {index: 2, selectedBy: \"\"},\n      {index: 3, selectedBy: \"\"},\n      {index: 4, selectedBy: \"\"},\n      {index: 5, selectedBy: \"\"},\n      {index: 6, selectedBy: \"\"},\n      {index: 7, selectedBy: \"\"},\n      {index: 8, selectedBy: \"\"}\n    ],\n    winningThree: [],\n    playing: false\n  }\n\n  reset = () => {\n    this.setState({\n      win: \"\",\n      boxes: [\n        {index: 0, selectedBy: \"\"},\n        {index: 1, selectedBy: \"\"},\n        {index: 2, selectedBy: \"\"},\n        {index: 3, selectedBy: \"\"},\n        {index: 4, selectedBy: \"\"},\n        {index: 5, selectedBy: \"\"},\n        {index: 6, selectedBy: \"\"},\n        {index: 7, selectedBy: \"\"},\n        {index: 8, selectedBy: \"\"}\n      ],\n      winningThree: [],\n      myTurn: Boolean(Math.random() < 0.5),\n      mySymbol: [\"O\", \"X\"][Math.round(Math.random())],\n      playing: true\n    }, () => {\n      if (!this.state.myTurn) {\n        this.finishTurn();\n      }\n    })\n  }\n\n  changeSymbol = () => {\n    const { mySymbol } = this.state;\n    this.setState({\n      mySymbol: mySymbol===\"X\" ? \"O\" : \"X\",\n    });\n  }\n\n  checkForThree = (player) => {\n    const { boxes } = this.state;\n    if (possibleThrees.some(combination => combination.every(boxNumber => boxes[boxNumber][\"selectedBy\"]===player))) {\n      this.setState({\n        win: player,\n        winningThree: possibleThrees.find(combination => combination.every(boxNumber => boxes[boxNumber][\"selectedBy\"]===player)),\n        playing: false\n      });\n    } else if (boxes.filter(box => box[\"selectedBy\"]!==\"\").length > 8) {\n      this.setState({ win: \"draw\", playing: false });\n    };\n  }\n\n  select = (index, player) => {\n    const { win, boxes, myTurn } = this.state;\n    if (win !== \"\") {\n      return;\n    } else {\n      boxes[index].selectedBy = player;\n      this.setState({ boxes }, () => this.checkForThree(player));\n      setTimeout(() => this.setState({ myTurn: !myTurn }), 500);\n    }\n  }\n\n  selectBox = key => {\n    const { win, boxes, myTurn, playing } = this.state;\n    if (playing && myTurn && boxes[key][\"selectedBy\"]===\"\" && win===\"\") {\n      this.select(key, \"me\");\n      this.checkForThree(\"me\");\n      if (win!==\"\") {\n        return;\n      } else {\n        this.finishTurn();\n      }   \n    }\n  }\n\n  finishTurn = () => {\n    const { boxes } = this.state;\n    const indices = Object.keys(boxes).filter(key => boxes[key][\"selectedBy\"]===\"\");\n    let computerChoice;\n    if (possibleThrees.some(combination =>\n      combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"computer\").length===2\n      && combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"\").length===1)\n    ) {\n      const combos = possibleThrees.filter(combination =>\n        combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"computer\").length===2\n        && combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"\").length===1);\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"\");\n    } else if (possibleThrees.some(combination =>\n      combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"me\").length===2\n      && combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"\").length===1)\n    ) {\n      const combos = possibleThrees.filter(combination =>\n        combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"me\").length===2\n        && combination.filter(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"\").length===1);\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber][\"selectedBy\"]===\"\");\n    } else {\n      computerChoice = indices[Math.floor(Math.random() * indices.length)];\n    }\n    setTimeout(this.select, 500, computerChoice, \"computer\");\n  }\n\n  render() {\n    const { switchGame } = this.props;\n    const { mySymbol, win, winningThree, boxes, myTurn, playing } = this.state;\n    const computerSymbol = mySymbol===\"X\" ? \"O\" : \"X\";\n    const boxSideLength = Math.min(window.innerWidth, window.innerHeight) / 4;\n    return (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div className=\"container\" style={{\n            gridTemplateColumns: `repeat(3, ${boxSideLength}px)`,\n            gridTemplateRows: `repeat(3, ${boxSideLength}px)` }}>\n            {winningThree.length > 0 ? <svg className=\"path-container\" width={boxSideLength * 3} height={boxSideLength * 3}>\n              <line\n                x1={((winningThree[0] % 3) * boxSideLength) + boxSideLength / 2}\n                y1={(Math.floor(winningThree[0] / 3) * boxSideLength) + boxSideLength / 2}\n                x2={((winningThree[2] % 3) * boxSideLength) + boxSideLength / 2}\n                y2={(Math.floor(winningThree[2] / 3) * boxSideLength) + boxSideLength / 2}\n              />\n            </svg> : null}\n            {Object.keys(boxes).map(key => <Box\n              index={key}\n              key={key}\n              win={win}\n              box={boxes[key]}\n              mySymbol={mySymbol}\n              computerSymbol={computerSymbol}\n              selectBox={() => this.selectBox(key)}\n            />)}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <button onClick={this.reset}>New Game</button>\n          {playing && (\n            <React.Fragment>\n              <p>{myTurn ? \"Your turn\" : \"The computer's turn\"}</p>\n              <div className=\"option-picker\">\n                <p>You are: {mySymbol}s</p>\n                <button\n                  onClick={this.changeSymbol}\n                  style={{ backgroundColor: \"yellow\", color: \"black\" }}\n                >\n                  Choose {computerSymbol}s\n                </button>\n              </div>\n            </React.Fragment>\n          )}\n          <button onClick={switchGame} className=\"secondary-button\">Play Connect 4</button>\n          {win===\"draw\" ? <h2>It's a draw</h2> : win===\"me\" ? <h2>You win!</h2> : win===\"computer\" ? <h2>The computer wins!</h2> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Grid;\n","import React, { Component } from 'react';\n\nconst Cell = ({ fill, myColour, computerColour, cellSideLength }) => (\n  <div className=\"cell\">\n    <div\n      className=\"circle\"\n      style={{\n        width: `${cellSideLength * 0.75}px`,\n        height: `${cellSideLength * 0.75}px`,\n        backgroundColor: fill === 'me' ? myColour : fill === 'computer' ? computerColour : '#80acf2',\n        borderRadius: '50%'\n      }}\n    />\n  </div>\n);\n\nexport default Cell;\n","import React from 'react';\n\nfunction Arrow(props) {\n  const { cellSideLength, hidden, active, index, selectColumn } = props;\n\n  function selectArrow() {\n    if (!hidden && active) {\n      selectColumn(parseFloat(index, 10), 'me');\n    }\n  }\n\n  return (\n    <div\n      onClick={selectArrow}\n      style={{\n        fontSize: `${cellSideLength / 2}px`,\n        fontWeight: 'bold',\n        width: `${cellSideLength}px`,\n        cursor: 'pointer'\n      }}\n    >\n      <span style={{ display: hidden ? 'none' : 'block' }}>↓</span>\n    </div>\n  );\n}\n\nexport default Arrow;\n","import React, { Component } from 'react';\nimport Cell from './Cell';\nimport Arrow from './Arrow';\nimport { possibleFours } from './combinations';\n\nclass Board extends Component {\n  state = {\n    cells: [\n      { index: 0, selectedBy: '' },\n      { index: 1, selectedBy: '' },\n      { index: 2, selectedBy: '' },\n      { index: 3, selectedBy: '' },\n      { index: 4, selectedBy: '' },\n      { index: 5, selectedBy: '' },\n      { index: 6, selectedBy: '' },\n      { index: 7, selectedBy: '' },\n      { index: 8, selectedBy: '' },\n      { index: 9, selectedBy: '' },\n      { index: 10, selectedBy: '' },\n      { index: 11, selectedBy: '' },\n      { index: 12, selectedBy: '' },\n      { index: 13, selectedBy: '' },\n      { index: 14, selectedBy: '' },\n      { index: 15, selectedBy: '' },\n      { index: 16, selectedBy: '' },\n      { index: 17, selectedBy: '' },\n      { index: 18, selectedBy: '' },\n      { index: 19, selectedBy: '' },\n      { index: 20, selectedBy: '' },\n      { index: 21, selectedBy: '' },\n      { index: 22, selectedBy: '' },\n      { index: 23, selectedBy: '' },\n      { index: 24, selectedBy: '' },\n      { index: 25, selectedBy: '' },\n      { index: 26, selectedBy: '' },\n      { index: 27, selectedBy: '' },\n      { index: 28, selectedBy: '' },\n      { index: 29, selectedBy: '' },\n      { index: 30, selectedBy: '' },\n      { index: 31, selectedBy: '' },\n      { index: 32, selectedBy: '' },\n      { index: 33, selectedBy: '' },\n      { index: 34, selectedBy: '' },\n      { index: 35, selectedBy: '' },\n      { index: 36, selectedBy: '' },\n      { index: 37, selectedBy: '' },\n      { index: 38, selectedBy: '' },\n      { index: 39, selectedBy: '' },\n      { index: 40, selectedBy: '' },\n      { index: 41, selectedBy: '' }\n    ],\n    winner: '',\n    winningCombo: [],\n    playing: false,\n    rolling: false\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        cells: [\n          { index: 0, selectedBy: '' },\n          { index: 1, selectedBy: '' },\n          { index: 2, selectedBy: '' },\n          { index: 3, selectedBy: '' },\n          { index: 4, selectedBy: '' },\n          { index: 5, selectedBy: '' },\n          { index: 6, selectedBy: '' },\n          { index: 7, selectedBy: '' },\n          { index: 8, selectedBy: '' },\n          { index: 9, selectedBy: '' },\n          { index: 10, selectedBy: '' },\n          { index: 11, selectedBy: '' },\n          { index: 12, selectedBy: '' },\n          { index: 13, selectedBy: '' },\n          { index: 14, selectedBy: '' },\n          { index: 15, selectedBy: '' },\n          { index: 16, selectedBy: '' },\n          { index: 17, selectedBy: '' },\n          { index: 18, selectedBy: '' },\n          { index: 19, selectedBy: '' },\n          { index: 20, selectedBy: '' },\n          { index: 21, selectedBy: '' },\n          { index: 22, selectedBy: '' },\n          { index: 23, selectedBy: '' },\n          { index: 24, selectedBy: '' },\n          { index: 25, selectedBy: '' },\n          { index: 26, selectedBy: '' },\n          { index: 27, selectedBy: '' },\n          { index: 28, selectedBy: '' },\n          { index: 29, selectedBy: '' },\n          { index: 30, selectedBy: '' },\n          { index: 31, selectedBy: '' },\n          { index: 32, selectedBy: '' },\n          { index: 33, selectedBy: '' },\n          { index: 34, selectedBy: '' },\n          { index: 35, selectedBy: '' },\n          { index: 36, selectedBy: '' },\n          { index: 37, selectedBy: '' },\n          { index: 38, selectedBy: '' },\n          { index: 39, selectedBy: '' },\n          { index: 40, selectedBy: '' },\n          { index: 41, selectedBy: '' }\n        ],\n        winner: '',\n        winningCombo: [],\n        myTurn: Boolean(Math.random() < 0.5),\n        myColour: ['red', 'yellow'][Math.round(Math.random())],\n        playing: true,\n        rolling: false\n      },\n      () => {\n        if (!this.state.myTurn) {\n          this.computerTurn();\n        }\n      }\n    );\n  };\n\n  changeColour = () => {\n    const { myColour } = this.state;\n    this.setState({\n      myColour: myColour === 'red' ? 'yellow' : 'red'\n    });\n  };\n\n  findAvailableCells = columnNumber => {\n    const columnCells = [\n      41 - 6 + columnNumber,\n      41 - 13 + columnNumber,\n      41 - 20 + columnNumber,\n      41 - 27 + columnNumber,\n      41 - 34 + columnNumber,\n      columnNumber\n    ];\n    const availableCells = columnCells.filter(\n      cell => this.state.cells[cell] && this.state.cells[cell]['selectedBy'] === ''\n    );\n    return availableCells.sort((a, b) => {\n      return a - b;\n    });\n  };\n\n  findBottomNumber = columnNumber => {\n    const availableCells = this.findAvailableCells(columnNumber);\n    return Math.max(...availableCells);\n  };\n\n  checkForFour = player => {\n    const { cells } = this.state;\n    // If any combination achieved by same player\n    if (\n      possibleFours.some(combination => combination.every(cellNumber => cells[cellNumber]['selectedBy'] === player))\n    ) {\n      this.setState({\n        playing: false,\n        winner: player,\n        winningCombo: possibleFours.find(combination =>\n          combination.every(cellNumber => cells[cellNumber]['selectedBy'] === player)\n        )\n      });\n      // If every cell filled by someone's counter\n    } else if (cells.every(cell => cell['selectedBy'] !== '')) {\n      this.setState({ playing: false, winner: 'draw' });\n    }\n  };\n\n  selectColumn = (columnNumber, player) => {\n    const { playing, winner, myTurn } = this.state;\n    if (!playing || winner !== '') {\n      return;\n    } else {\n      this.roll(columnNumber, player, () => {\n        this.setState({ myTurn: !myTurn, rolling: false }, () => this.checkForFour(player));\n        if (player === 'me' && playing) {\n          setTimeout(this.computerTurn, Math.random() * 2000);\n        }\n      });\n    }\n  };\n\n  roll = (columnNumber, player, finishRoll) => {\n    const { cells, rolling } = this.state;\n    if (rolling) return;\n    const numbers = this.findAvailableCells(columnNumber);\n    const lastNumber = this.findBottomNumber(columnNumber);\n    this.setState({ rolling: true });\n    const reachBottomCell = () => {\n      cells[lastNumber].selectedBy = player;\n      // For some reason this is needed to make sure it doesn't think you've scored a vertical 4 with only 3 counters\n      if (lastNumber >= 7) {\n        cells[lastNumber - 7].selectedBy = '';\n      }\n      this.setState({ cells }, () => finishRoll());\n    };\n    const slowLoop = (array, interval, callback) => {\n      var i = 0;\n      next();\n      function next() {\n        if (callback(array[i], i) !== false) {\n          if (++i < array.length - 1) {\n            setTimeout(next, interval);\n          } else {\n            reachBottomCell();\n          }\n        }\n      }\n    };\n    if (numbers.length === 1 && numbers[0] === lastNumber) {\n      reachBottomCell();\n    } else {\n      slowLoop(numbers, 100, i => {\n        cells[i].selectedBy = player;\n        this.setState({ cells });\n        setTimeout(() => {\n          cells[i].selectedBy = '';\n          this.setState({ cells });\n        }, 100);\n      });\n    }\n  };\n\n  computerTurn = () => {\n    const { cells } = this.state;\n    // Find columns which are not full\n    const availableColumns = Object.keys(cells.slice(0, 7)).filter(\n      key => this.findBottomNumber(parseFloat(key, 10)) > 0\n    );\n    let computerColumnChoice;\n    // If there are any 3/4s for the computer\n    if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7;\n      // If there are any 3/4s for me\n    } else if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber]['selectedBy'] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber]['selectedBy'] === '') % 7;\n    } else {\n      computerColumnChoice = parseFloat(availableColumns[Math.floor(Math.random() * availableColumns.length)], 10);\n    }\n    this.selectColumn(computerColumnChoice, 'computer');\n  };\n\n  render() {\n    const { switchGame } = this.props;\n    const { playing, myTurn, myColour, winner, cells, winningCombo, rolling } = this.state;\n    const computerColour = myColour === 'red' ? 'yellow' : 'red';\n    const cellSideLength = Math.min(window.innerWidth, window.innerHeight) / 8;\n    return (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div className=\"arrows\" style={{ gridTemplateColumns: `repeat(7, ${cellSideLength}px)` }}>\n            {Object.keys(cells.slice(0, 7)).map(key => (\n              <Arrow\n                index={key}\n                key={key}\n                hidden={this.findBottomNumber(parseFloat(key, 10)) < 0}\n                selectColumn={this.selectColumn}\n                active={!rolling && myTurn}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n          <div\n            className=\"board\"\n            style={{\n              gridTemplateRows: `repeat(6, ${cellSideLength}px)`,\n              gridTemplateColumns: `repeat(7, ${cellSideLength}px)`\n            }}\n          >\n            <svg className=\"path-container\" width={cellSideLength * 7} height={cellSideLength * 6}>\n              {winningCombo.length > 0 && (\n                <line\n                  x1={(winningCombo[0] % 7) * cellSideLength + cellSideLength / 2}\n                  y1={Math.floor(winningCombo[0] / 7) * cellSideLength + cellSideLength / 2}\n                  x2={(winningCombo[3] % 7) * cellSideLength + cellSideLength / 2}\n                  y2={Math.floor(winningCombo[3] / 7) * cellSideLength + cellSideLength / 2}\n                />\n              )}\n            </svg>\n            {Object.keys(cells).map(key => (\n              <Cell\n                index={key}\n                key={key}\n                fill={cells[key]['selectedBy']}\n                myColour={myColour}\n                computerColour={computerColour}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <button onClick={this.reset}>New Game</button>\n          {playing && (\n            <React.Fragment>\n              <p>{myTurn ? 'Your turn' : \"The computer's turn\"}</p>\n              <div className=\"option-picker\">\n                <p>Your colour: {myColour}</p>\n                <button\n                  onClick={this.changeColour}\n                  style={{\n                    backgroundColor: computerColour,\n                    color: computerColour === 'yellow' ? 'black' : 'white'\n                  }}\n                >\n                  Choose {computerColour}\n                </button>\n              </div>\n            </React.Fragment>\n          )}\n          <button onClick={switchGame} className=\"secondary-button\">\n            Play Noughts & Crosses\n          </button>\n          {winner === 'me' ? (\n            <h2>You win!</h2>\n          ) : winner === 'computer' ? (\n            <h2>The computer wins!</h2>\n          ) : winner === 'draw' ? (\n            <h2>It's a draw</h2>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Grid from './Grid';\nimport Board from './Board';\n\nfunction App() {\n  const [connect4, toggleConnect4] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {connect4 ?\n        <Board switchGame={() => toggleConnect4(false)} />\n        :\n        <Grid switchGame={() => toggleConnect4(true)} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}