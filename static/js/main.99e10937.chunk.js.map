{"version":3,"sources":["images/noughts&crosses.png","images/connect4.png","images/battleships.png","components/Nav/styles.js","components/Nav/index.js","components/Menu.js","components/Noughts/Box.js","components/Button/index.js","components/OptionToggle/styles.js","components/OptionToggle/index.js","combinations.js","components/Noughts/index.js","components/Connect4/Cell.js","components/Connect4/Arrow.js","components/Connect4/index.js","components/Battleships/Tile/styles.js","components/Battleships/Tile/index.js","components/Battleships/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","styled","nav","Link","NavLink","LinkContainer","div","isOpen","SmallMenu","MenuIcon","Nav","useState","toggleOpen","to","onClick","Menu","className","src","require","alt","Box","box","mySymbol","computerSymbol","selectBox","style","color","Button","button","colour","ToggleContainer","Toggle","label","props","firstOptionSelected","Hidden","input","Slider","colours","Number","OptionToggle","options","setOption","type","onChange","e","target","checked","emptyBoard","Array","from","fill","possibleThrees","emptyCells","possibleFours","Noughts","Component","state","win","boxes","winningThree","Math","round","random","playing","reset","this","setState","start","myTurn","Boolean","finishTurn","changeSymbol","checkForThree","player","some","combination","every","boxNumber","find","filter","length","select","index","setTimeout","key","indices","Object","keys","computerChoice","combos","floor","render","boxSideLength","min","window","innerWidth","innerHeight","gridTemplateColumns","gridTemplateRows","width","height","x1","y1","x2","y2","map","Cell","myColour","computerColour","cellSideLength","backgroundColor","borderRadius","Arrow","hidden","active","selectColumn","parseFloat","fontSize","fontWeight","cursor","display","Connect4","cells","winner","winningCombo","rolling","computerTurn","changeColour","findAvailableCells","columnNumber","cell","sort","a","b","findBottomNumber","availableCells","max","checkForFour","cellNumber","roll","finishRoll","numbers","lastNumber","reachBottomCell","array","interval","callback","i","next","slowLoop","availableColumns","slice","computerColumnChoice","SeaTile","selected","BitOfShip","visible","completed","css","position","direction","solo","Tile","ships","tile","selectingWater","initialValue","selectAsShip","unselectAsShip","selectAsWater","unselectAsWater","mouseDown","toggleMouseDown","thisShip","ship","includes","indexInShip","indexOf","setTile","onMouseDown","onMouseUp","onMouseEnter","Battleships","tileSideLength","lengths","setShips","setNumbers","toggleSelectingWater","visiblePositions","setVisiblePositions","selectedAsShips","setSelectedAsShips","selectedAsWater","setSelectedAsWater","setCompleted","placeShip","existingShips","filledTiles","Set","tiles","push","part","getForbiddenTiles","flat","horizontalPossibilities","number","verticalPossibilities","dir","firstPos","newSelected","join","marginLeft","newShips","latestShip","randomised","topNumbers","sideNumbers","App","basename","exact","path","component","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,EAAG,GAAI,IACX,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,EAAG,GACZ,CAAC,GAAI,GAAI,GAAI,GACb,CAAC,GAAI,GAAI,GAAI,GACb,CAAC,GAAI,GAAI,GAAI,GACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,G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","file":"static/js/main.99e10937.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noughts&crosses.6b73ade5.png\";","module.exports = __webpack_public_path__ + \"static/media/connect4.de3839ad.png\";","module.exports = __webpack_public_path__ + \"static/media/battleships.555f39a7.png\";","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = styled.nav`\n  background-color: indigo;\n`;\n\nexport const Link = styled(NavLink)`\n  font-weight: bold;\n  color: #fff;\n  text-decoration: none;\n  margin: 5px;\n  @media screen and (min-width: 800px) {\n    transform: rotate(-90deg);\n  }\n`;\n\nexport const LinkContainer = styled.div(({ isOpen }) =>`\n  display: ${isOpen ? 'flex' : 'none'};\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  padding: 10px;\n  @media screen and (min-width: 800px) {\n    display: flex;\n  }\n`);\n\nexport const SmallMenu = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  @media screen and (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport const MenuIcon = styled.div`\n  color: #fff;\n  font-size: 24px;\n  cursor: pointer;\n  margin: 5px;\n`;","import React, { useState } from 'react';\nimport { NavBar, SmallMenu, LinkContainer, Link, MenuIcon } from './styles';\n\nfunction Nav() {\n  const [isOpen, toggleOpen] = useState(false);\n  return (\n    <NavBar>\n      <SmallMenu>\n        <Link to=\"/\">Home</Link>\n        <MenuIcon onClick={() => toggleOpen(!isOpen)}>{isOpen ? '✕' : '☰'}</MenuIcon>\n      </SmallMenu>\n      <LinkContainer isOpen={isOpen} >\n        <Link to=\"/noughts&crosses\">\n          0s & Xs\n        </Link>\n        <Link to=\"/connect4\">\n          Connect 4\n        </Link>\n        <Link to=\"/battleships\">\n          Battleships\n        </Link>\n      </LinkContainer>\n    </NavBar>\n  );\n} \n\nexport default Nav;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction Menu() {\n  return (\n    <div className=\"menu\">\n      <NavLink to=\"/noughts&crosses\" className=\"preview-link\">\n        Noughts & Crosses\n        <img className=\"preview\" src={require('../images/noughts&crosses.png')} alt=\"Noughts & Crosses\" />\n      </NavLink>\n      <NavLink to=\"/connect4\" className=\"preview-link\">\n        Connect 4\n        <img className=\"preview\" src={require('../images/connect4.png')} alt=\"Connect 4\" />\n      </NavLink>\n      <NavLink to=\"/battleships\" className=\"preview-link\">\n        Battleships\n        <img className=\"preview\" src={require('../images/battleships.png')} alt=\"Battleships\" />\n      </NavLink>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\n\nconst Box = ({ box, mySymbol, computerSymbol, selectBox }) => (\n\t<div className=\"box\" onClick={selectBox}>\n\t\t{box === 'me' ? (\n\t\t\t<span style={{color: mySymbol === 'X' ? 'red' : 'yellow'}}>{mySymbol}</span>\n\t\t) : box === 'computer' ? (\n\t\t\t<span className=\"computerSymbol\" style={{color: computerSymbol === 'X' ? 'red' : 'yellow'}}>{computerSymbol}</span>\n\t\t) : null}\n\t</div>\n);\n\nexport default Box;\n","import styled from 'styled-components';\n\nconst Button = styled.button(({ colour }) =>`\n  background-color: ${colour || 'green'};\n  color: ${colour === 'yellow' ? '#000' : '#fff'};\n  font-family: 'Orbitron', sans-serif;\n  font-size: 16px;\n  font-weight: bold;\n  border-radius: 5px;\n  border: 2px solid black;\n  padding: 5px;\n  margin: 5px;\n  -webkit-backface-visibility: hidden;\n  &:hover {\n    box-shadow: 0 0 1px 1px grey;\n    transform: scale(0.95);\n  }\n`);\n\nexport default Button;","import styled from \"styled-components\";\n\nexport const ToggleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Toggle = styled.label`\n  width: 60px;\n  height: 36px;\n  border-radius: 18px;\n  background-color: lightgrey;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 5px;\n  box-shadow: inset 0 0 5px grey;\n  justify-content: ${props => (props.firstOptionSelected ? \"flex-start\" : \"flex-end\")};\n`;\n\nexport const Hidden = styled.input`\n  display: none;\n`;\n\nexport const Slider = styled.div(({ colours, firstOptionSelected }) =>`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin: 3px;\n  box-shadow: 0 0 5px grey;\n  background-color: ${colours ? colours[Number(!firstOptionSelected)] : [\"yellow\", \"red\"][Number(!firstOptionSelected)] };\n`);","import React from \"react\"\nimport {\n  ToggleContainer,\n  Toggle,\n  Hidden,\n  Slider,\n} from \"./styles\";\n\nconst OptionToggle = ({ options, colours, firstOptionSelected, setOption }) => (\n  <ToggleContainer>\n    {options[0]}\n    <Toggle firstOptionSelected={firstOptionSelected}>\n      <Hidden\n        type=\"checkbox\"\n        onChange={e => setOption(e.target.checked)}\n      />\n      <Slider colours={colours} firstOptionSelected={firstOptionSelected} />\n    </Toggle>\n    {options[1]}\n  </ToggleContainer>\n);\n\nexport default OptionToggle;","export const emptyBoard = () => {\n  return Array.from(Array(9).fill(''));\n}\n  \nexport const possibleThrees = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\nexport const emptyCells = () => {\n  return Array.from(Array(42).fill(''));\n}\n\nexport const possibleFours = [\n  [0, 1, 2, 3],\n  [1, 2, 3, 4],\n  [2, 3, 4, 5],\n  [3, 4, 5, 6],\n  [7, 8, 9, 10],\n  [8, 9, 10, 11],\n  [9, 10, 11, 12],\n  [10, 11, 12, 13],\n  [14, 15, 16, 17],\n  [15, 16, 17, 18],\n  [16, 17, 18, 19],\n  [17, 18, 19, 20],\n  [21, 22, 23, 24],\n  [22, 23, 24, 25],\n  [23, 24, 25, 26],\n  [24, 25, 26, 27],\n  [28, 29, 30, 31],\n  [29, 30, 31, 32],\n  [30, 31, 32, 33],\n  [31, 32, 33, 34],\n  [35, 36, 37, 38],\n  [36, 37, 38, 39],\n  [37, 38, 39, 40],\n  [38, 39, 40, 41],\n  [0, 7, 14, 21],\n  [7, 14, 21, 28],\n  [14, 21, 28, 35],\n  [1, 8, 15, 22],\n  [8, 15, 22, 29],\n  [15, 22, 29, 36],\n  [2, 9, 16, 23],\n  [9, 16, 23, 30],\n  [16, 23, 30, 37],\n  [3, 10, 17, 24],\n  [10, 17, 24, 31],\n  [17, 24, 31, 38],\n  [4, 11, 18, 25],\n  [11, 18, 25, 32],\n  [18, 25, 32, 39],\n  [5, 12, 19, 26],\n  [12, 19, 26, 33],\n  [19, 26, 33, 40],\n  [6, 13, 20, 27],\n  [13, 20, 27, 34],\n  [20, 27, 34, 41],\n  [0, 8, 16, 24],\n  [1, 9, 17, 25],\n  [2, 10, 18, 26],\n  [3, 11, 19, 27],\n  [7, 15, 23, 31],\n  [8, 16, 24, 32],\n  [9, 17, 25, 33],\n  [10, 18, 26, 34],\n  [14, 22, 30, 38],\n  [15, 23, 31, 39],\n  [16, 24, 32, 40],\n  [17, 25, 33, 41],\n  [21, 15, 9, 3],\n  [22, 16, 10, 4],\n  [23, 17, 11, 5],\n  [24, 18, 12, 6],\n  [28, 22, 16, 10],\n  [29, 23, 17, 11],\n  [30, 24, 18, 12],\n  [31, 25, 19, 13],\n  [35, 29, 23, 17],\n  [36, 30, 24, 18],\n  [37, 31, 25, 19],\n  [38, 32, 26, 20]\n];\n","import React, { Component } from 'react';\nimport Box from './Box';\nimport Button from '../Button';\nimport OptionToggle from '../OptionToggle';\nimport { emptyBoard, possibleThrees } from '../../combinations';\n\nclass Noughts extends Component {\n  state = {\n    win: '',\n    boxes: emptyBoard(),\n    winningThree: [],\n    mySymbol: ['O', 'X'][Math.round(Math.random())],\n    playing: false\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        win: '',\n        boxes: emptyBoard(),\n        winningThree: [],\n        mySymbol: ['O', 'X'][Math.round(Math.random())],\n        playing: false\n      }\n    );\n  };\n\n  start = () => {\n    this.setState(\n      {\n        win: '',\n        boxes: emptyBoard(),\n        winningThree: [],\n        myTurn: Boolean(Math.random() < 0.5),\n        playing: true\n      },\n      () => {\n        if (!this.state.myTurn) {\n          this.finishTurn();\n        }\n      }\n    );\n  };\n\n  changeSymbol = () => {\n    const { mySymbol } = this.state;\n    this.setState({\n      mySymbol: mySymbol === 'X' ? 'O' : 'X'\n    });\n  };\n\n  checkForThree = player => {\n    const { boxes } = this.state;\n    if (possibleThrees.some(combination => combination.every(boxNumber => boxes[boxNumber] === player))) {\n      this.setState({\n        win: player,\n        winningThree: possibleThrees.find(combination =>\n          combination.every(boxNumber => boxes[boxNumber] === player)\n        ),\n        playing: false\n      });\n    } else if (boxes.filter(box => box !== '').length > 8) {\n      this.setState({ win: 'draw', playing: false });\n    }\n  };\n\n  select = (index, player) => {\n    const { win, boxes, myTurn } = this.state;\n    if (win !== '') {\n      return;\n    } else {\n      boxes[index] = player;\n      this.setState({ boxes }, () => this.checkForThree(player));\n      setTimeout(() => this.setState({ myTurn: !myTurn }), 500);\n    }\n  };\n\n  selectBox = key => {\n    const { win, boxes, myTurn, playing } = this.state;\n    if (playing && myTurn && boxes[key] === '' && win === '') {\n      this.select(key, 'me');\n      this.checkForThree('me');\n      if (win !== '') {\n        return;\n      } else {\n        this.finishTurn();\n      }\n    }\n  };\n\n  finishTurn = () => {\n    const { boxes } = this.state;\n    const indices = Object.keys(boxes).filter(key => boxes[key] === '');\n    let computerChoice;\n    if (\n      possibleThrees.some(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'computer').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      )\n    ) {\n      const combos = possibleThrees.filter(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'computer').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber] === '');\n    } else if (\n      possibleThrees.some(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'me').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      )\n    ) {\n      const combos = possibleThrees.filter(\n        combination =>\n          combination.filter(boxNumber => boxes[boxNumber] === 'me').length === 2 &&\n          combination.filter(boxNumber => boxes[boxNumber] === '').length === 1\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerChoice = randomCombo.find(boxNumber => boxes[boxNumber] === '');\n    } else {\n      computerChoice = indices[Math.floor(Math.random() * indices.length)];\n    }\n    setTimeout(this.select, 500, computerChoice, 'computer');\n  };\n\n  render() {\n    const { mySymbol, win, winningThree, boxes, myTurn, playing } = this.state;\n    const computerSymbol = mySymbol === 'X' ? 'O' : 'X';\n    const boxSideLength = Math.min(window.innerWidth, window.innerHeight) / 4;\n\n    return !playing && win === '' ? (\n      <div className=\"setup\">\n        <div className=\"option-picker\">\n          <p>Select your pieces:</p>\n          <OptionToggle options={['O', 'X']} firstOptionSelected={mySymbol === 'O'} setOption={this.changeSymbol} />\n        </div>\n        <Button onClick={this.start}>Start Game</Button>\n      </div>\n    ) : (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div\n            className=\"container\"\n            style={{\n              gridTemplateColumns: `repeat(3, ${boxSideLength}px)`,\n              gridTemplateRows: `repeat(3, ${boxSideLength}px)`\n            }}\n          >\n            {winningThree.length > 0 ? (\n              <svg className=\"path-container\" width={boxSideLength * 3} height={boxSideLength * 3}>\n                <line\n                  x1={(winningThree[0] % 3) * boxSideLength + boxSideLength / 2}\n                  y1={Math.floor(winningThree[0] / 3) * boxSideLength + boxSideLength / 2}\n                  x2={(winningThree[2] % 3) * boxSideLength + boxSideLength / 2}\n                  y2={Math.floor(winningThree[2] / 3) * boxSideLength + boxSideLength / 2}\n                />\n              </svg>\n            ) : null}\n            {boxes.map((index, key) => (\n              <Box\n                index={index}\n                key={key}\n                win={win}\n                box={boxes[key]}\n                mySymbol={mySymbol}\n                computerSymbol={computerSymbol}\n                selectBox={() => this.selectBox(key)}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <p>{myTurn ? 'Your turn' : \"The computer's turn\"}</p>\n          <Button onClick={this.reset}>New Game</Button>\n          {win === 'draw' ? (\n            <h2>It's a draw</h2>\n          ) : win === 'me' ? (\n            <h2>You win!</h2>\n          ) : win === 'computer' ? (\n            <h2>The computer wins!</h2>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Noughts;\n","import React from 'react';\n\nconst Cell = ({ fill, myColour, computerColour, cellSideLength }) => (\n  <div className=\"cell\">\n    <div\n      className=\"circle\"\n      style={{\n        width: `${cellSideLength * 0.75}px`,\n        height: `${cellSideLength * 0.75}px`,\n        backgroundColor: fill === 'me' ? myColour : fill === 'computer' ? computerColour : '#80acf2',\n        borderRadius: '50%'\n      }}\n    />\n  </div>\n);\n\nexport default Cell;\n","import React from 'react';\n\nfunction Arrow(props) {\n  const { cellSideLength, hidden, active, index, selectColumn } = props;\n\n  function selectArrow() {\n    if (!hidden && active) {\n      selectColumn(parseFloat(index, 10), 'me');\n    }\n  }\n\n  return (\n    <div\n      onClick={selectArrow}\n      style={{\n        fontSize: `${cellSideLength / 2}px`,\n        fontWeight: 'bold',\n        width: `${cellSideLength}px`,\n        cursor: 'pointer'\n      }}\n    >\n      <span style={{ display: hidden ? 'none' : 'block' }}>↓</span>\n    </div>\n  );\n}\n\nexport default Arrow;\n","import React, { Component } from 'react';\nimport Cell from './Cell';\nimport Arrow from './Arrow';\nimport Button from '../Button';\nimport OptionToggle from '../OptionToggle';\nimport { emptyCells, possibleFours } from '../../combinations';\n\nclass Connect4 extends Component {\n  state = {\n    cells: emptyCells(),\n    winner: '',\n    winningCombo: [],\n    myColour: ['red', 'yellow'][Math.round(Math.random())],\n    playing: false,\n    rolling: false\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        cells: emptyCells(),\n        winner: '',\n        winningCombo: [],\n        playing: false,\n        rolling: false\n      }\n    );\n  };\n\n  start = () => {\n    this.setState(\n      {\n        cells: emptyCells(),\n        winner: '',\n        winningCombo: [],\n        myTurn: Boolean(Math.random() < 0.5),\n        playing: true,\n        rolling: false\n      },\n      () => {\n        if (!this.state.myTurn) {\n          this.computerTurn();\n        }\n      }\n    );\n  };\n\n  changeColour = () => {\n    const { myColour } = this.state;\n    this.setState({\n      myColour: myColour === 'red' ? 'yellow' : 'red'\n    });\n  };\n\n  findAvailableCells = columnNumber => {\n    const columnCells = [\n      41 - 6 + columnNumber,\n      41 - 13 + columnNumber,\n      41 - 20 + columnNumber,\n      41 - 27 + columnNumber,\n      41 - 34 + columnNumber,\n      columnNumber\n    ];\n    const availableCells = columnCells.filter(\n      cell => this.state.cells[cell] === ''\n    );\n    return availableCells.sort((a, b) => {\n      return a - b;\n    });\n  };\n\n  findBottomNumber = columnNumber => {\n    const availableCells = this.findAvailableCells(columnNumber);\n    return Math.max(...availableCells);\n  };\n\n  checkForFour = player => {\n    const { cells } = this.state;\n    // If any combination achieved by same player\n    if (\n      possibleFours.some(combination => combination.every(cellNumber => cells[cellNumber] === player))\n    ) {\n      this.setState({\n        playing: false,\n        winner: player,\n        winningCombo: possibleFours.find(combination =>\n          combination.every(cellNumber => cells[cellNumber] === player)\n        )\n      });\n      // If every cell filled by someone's counter\n    } else if (cells.every(cell => cell !== '')) {\n      this.setState({ playing: false, winner: 'draw' });\n    }\n  };\n\n  selectColumn = (columnNumber, player) => {\n    const { playing, winner, myTurn } = this.state;\n    if (!playing || winner !== '') {\n      return;\n    } else {\n      this.roll(columnNumber, player, () => {\n        this.setState({ myTurn: !myTurn, rolling: false }, () => this.checkForFour(player));\n        if (player === 'me' && playing) {\n          setTimeout(this.computerTurn, Math.random() * 2000);\n        }\n      });\n    }\n  };\n\n  roll = (columnNumber, player, finishRoll) => {\n    const { cells, rolling } = this.state;\n    if (rolling) return;\n    const numbers = this.findAvailableCells(columnNumber);\n    const lastNumber = this.findBottomNumber(columnNumber);\n    this.setState({ rolling: true });\n    const reachBottomCell = () => {\n      cells[lastNumber] = player;\n      // For some reason this is needed to make sure it doesn't think you've scored a vertical 4 with only 3 counters\n      if (lastNumber >= 7) {\n        cells[lastNumber - 7] = '';\n      }\n      this.setState({ cells }, () => finishRoll());\n    };\n    const slowLoop = (array, interval, callback) => {\n      var i = 0;\n      next();\n      function next() {\n        if (callback(array[i], i) !== false) {\n          if (++i < array.length - 1) {\n            setTimeout(next, interval);\n          } else {\n            reachBottomCell();\n          }\n        }\n      }\n    };\n    if (numbers.length === 1 && numbers[0] === lastNumber) {\n      reachBottomCell();\n    } else {\n      slowLoop(numbers, 100, i => {\n        cells[i] = player;\n        this.setState({ cells });\n        setTimeout(() => {\n          cells[i] = '';\n          this.setState({ cells });\n        }, 100);\n      });\n    }\n  };\n\n  computerTurn = () => {\n    const { cells } = this.state;\n    // Find columns which are not full\n    const availableColumns = Object.keys(cells.slice(0, 7)).filter(\n      key => this.findBottomNumber(parseFloat(key, 10)) > 0\n    );\n    let computerColumnChoice;\n    // If there are any 3/4s for the computer\n    if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'computer').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber] === '') % 7;\n      // If there are any 3/4s for me\n    } else if (\n      possibleFours.some(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      )\n    ) {\n      const combos = possibleFours.filter(\n        combination =>\n          combination.filter(cellNumber => cells[cellNumber] === 'me').length === 3 &&\n          combination.filter(cellNumber => cells[cellNumber] === '').length === 1 &&\n          combination.find(cellNumber => cells[cellNumber] === '') ===\n            this.findBottomNumber(combination.find(cellNumber => cells[cellNumber] === '') % 7)\n      );\n      const randomCombo = combos[Math.floor(Math.random() * combos.length)];\n      computerColumnChoice = randomCombo.find(cellNumber => cells[cellNumber] === '') % 7;\n    } else {\n      computerColumnChoice = parseFloat(availableColumns[Math.floor(Math.random() * availableColumns.length)], 10);\n    }\n    this.selectColumn(computerColumnChoice, 'computer');\n  };\n\n  render() {\n    const { playing, myTurn, myColour, winner, cells, winningCombo, rolling } = this.state;\n    const computerColour = myColour === 'red' ? 'yellow' : 'red';\n    const cellSideLength = Math.min(window.innerWidth, window.innerHeight) / 8;\n\n    return !playing && winner === '' ? (\n      <div className=\"setup\">\n        <div className=\"option-picker\">\n          <p>Select your colour:</p>\n          <OptionToggle options={['yellow', 'red']} firstOptionSelected={myColour === 'yellow'} setOption={this.changeColour} />\n        </div>\n        <Button onClick={this.start}>Start Game</Button>\n      </div>\n    ) : (\n      <div className=\"console\">\n        <div className=\"game\">\n          <div className=\"arrows\" style={{ gridTemplateColumns: `repeat(7, ${cellSideLength}px)` }}>\n            {Object.keys(cells.slice(0, 7)).map(key => (\n              <Arrow\n                index={key}\n                key={key}\n                hidden={this.findBottomNumber(parseFloat(key, 10)) < 0}\n                selectColumn={this.selectColumn}\n                active={!rolling && myTurn}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n          <div\n            className=\"board\"\n            style={{\n              gridTemplateRows: `repeat(6, ${cellSideLength}px)`,\n              gridTemplateColumns: `repeat(7, ${cellSideLength}px)`\n            }}\n          >\n            <svg className=\"path-container\" width={cellSideLength * 7} height={cellSideLength * 6}>\n              {winningCombo.length === 4 && (\n                <line\n                  x1={(winningCombo[0] % 7) * cellSideLength + cellSideLength / 2}\n                  y1={Math.floor(winningCombo[0] / 7) * cellSideLength + cellSideLength / 2}\n                  x2={(winningCombo[3] % 7) * cellSideLength + cellSideLength / 2}\n                  y2={Math.floor(winningCombo[3] / 7) * cellSideLength + cellSideLength / 2}\n                />\n              )}\n            </svg>\n            {cells.map((cell, index) => (\n              <Cell\n                index={index}\n                key={index}\n                fill={cell}\n                myColour={myColour}\n                computerColour={computerColour}\n                cellSideLength={cellSideLength}\n              />\n            ))}\n          </div>\n        </div>\n        <div className=\"controls\">\n          <Button onClick={this.reset}>New Game</Button>\n          {playing && (\n            <p>{myTurn ? 'Your turn' : \"The computer's turn\"}</p>\n          )}\n          {winner === 'me' ? (\n            <h2>You win!</h2>\n          ) : winner === 'computer' ? (\n            <h2>The computer wins!</h2>\n          ) : winner === 'draw' ? (\n            <h2>It's a draw</h2>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Connect4;\n","import styled, { css } from 'styled-components';\n\nexport const SeaTile = styled.div`\n  background-color: ${props => (props.selected ? 'blue' : 'transparent')};\n  border: 1px solid black;\n  display: flex;\n  padding: 5px;\n  align-items: center;\n  justify-content: center;\n  @media screen and (min-width: 600px) {\n    padding: 10px;\n  }\n`;\n\nexport const BitOfShip = styled.div`\n  background-color: yellow;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: Verdana, sans-serif;\n  font-size: 16px;\n  border: 1px solid grey;\n  ${props =>\n    (props.visible || props.completed) &&\n    css`\n      border-top-left-radius: ${props.position === 'start' ? '50%' : 0};\n      border-top-right-radius: ${(props.position === 'start' && props.direction === 'vertical') ||\n      (props.position === 'end' && props.direction === 'horizontal')\n        ? '50%'\n        : 0};\n      border-bottom-left-radius: ${(props.position === 'start' && props.direction === 'horizontal') ||\n      (props.position === 'end' && props.direction === 'vertical')\n        ? '50%'\n        : 0};\n      border-bottom-right-radius: ${props.position === 'end' ? '50%' : 0};\n    `}\n  ${props =>\n    (props.visible || props.completed) &&\n    props.solo &&\n    css`\n      border-radius: 50%;\n    `}\n  @media screen and (min-width: 600px) {\n    font-size: 20px;\n  }\n`;\n","import React from 'react';\nimport { SeaTile, BitOfShip } from './styles';\n\nfunction Tile({\n  ships,\n  tile,\n  selectingWater,\n  initialValue,\n  selectAsShip,\n  unselectAsShip,\n  selectAsWater,\n  unselectAsWater,\n  selected,\n  completed,\n  mouseDown,\n  toggleMouseDown\n}) {\n  const thisShip = ships.find(ship => ship.includes(tile));\n  const indexInShip = thisShip ? thisShip.indexOf(tile) : null;\n  const solo = thisShip && thisShip.length === 1;\n  const position =\n    thisShip && !solo ? (indexInShip === 0 ? 'start' : indexInShip === thisShip.length - 1 ? 'end' : 'middle') : null;\n\n  function getDirection() {\n    if (position === 'start') {\n      return thisShip[1] - tile === 7 ? 'vertical' : 'horizontal';\n    } else if (position === 'end') {\n      return tile - thisShip[indexInShip - 1] === 7 ? 'vertical' : 'horizontal';\n    }\n    return null;\n  }\n\n  function setTile() {\n    if (initialValue || !ships.length) return;\n    if (selected) {\n      selected === 'ship' ? unselectAsShip(tile) : unselectAsWater(tile);\n    } else {\n      selectingWater ? selectAsWater(tile) : selectAsShip(tile);\n    }\n  }\n\n  return (\n    <SeaTile\n      onMouseDown={() => {\n        toggleMouseDown(true);\n        setTile();\n      }}\n      onMouseUp={() => toggleMouseDown(false)}\n      onMouseEnter={() => {\n        if (mouseDown) setTile();\n      }}\n      selected={initialValue || selected}\n    >\n      {(initialValue === 'ship' || selected === 'ship') && (\n        <BitOfShip\n          position={position}\n          direction={getDirection()}\n          solo={solo}\n          visible={initialValue === 'ship'}\n          completed={completed}\n        >\n          {!initialValue && !completed && '?'}\n        </BitOfShip>\n      )}\n    </SeaTile>\n  );\n}\n\nexport default Tile;\n","import React, { useState } from 'react';\nimport Button from '../Button';\nimport Tile from './Tile';\nimport OptionToggle from '../OptionToggle';\n\nfunction Battleships() {\n  const tileSideLength = Math.min(window.innerWidth, window.innerHeight) / 9;\n  const lengths = [4, 3, 2, 2, 1, 1];\n  const [ships, setShips] = useState([]);\n  const [numbers, setNumbers] = useState([[], []]);\n  const [selectingWater, toggleSelectingWater] = useState(true);\n  const [visiblePositions, setVisiblePositions] = useState([]);\n  const [selectedAsShips, setSelectedAsShips] = useState([]);\n  const [selectedAsWater, setSelectedAsWater] = useState([]);\n  const [completed, setCompleted] = useState(false);\n  const [mouseDown, toggleMouseDown] = useState(false);\n\n  function generateShips() {\n    let newShips = [];\n    setNumbers([[], []]);\n    setSelectedAsWater([]);\n    setCompleted(false);\n    for (let i = 0; i < lengths.length; i++) {\n      let latestShip = placeShip(lengths[i], newShips);\n      newShips.push(latestShip);\n    }\n    setShips(newShips);\n    let randomised = newShips.flat().sort(() => Math.random() - 0.5);\n    setVisiblePositions(randomised.slice(-3));\n    setSelectedAsShips(randomised.slice(-3));\n    let topNumbers = [];\n    let sideNumbers = [];\n    for (let i = 0; i < 7; i++) {\n      topNumbers.push(newShips.flat().filter(part => part % 7 === i).length);\n      sideNumbers.push(newShips.flat().filter(part => Math.floor(part / 7) === i).length);\n    }\n    setNumbers([topNumbers, sideNumbers]);\n  }\n\n  function getForbiddenTiles(ship) {\n    let tiles = [...ship];\n    if (ship[1] - ship[0] === 1) {\n      tiles.push(\n        ...(ship[0] >= 7 ? ship.map(part => part - 7) : []),\n        ...(ship[0] <= 42 ? ship.map(part => part + 7) : []),\n        ...(ship[0] % 7 !== 0 ? [ship[0] - 8, ship[0] - 1, ship[0] + 6] : []),\n        ...(ship[ship.length - 1] % 7 !== 7\n          ? [ship[ship.length - 1] + 8, ship[ship.length - 1] + 1, ship[ship.length - 1] - 6]\n          : [])\n      );\n    } else {\n      tiles.push(\n        ...(ship[0] % 7 !== 0 ? ship.map(part => part - 1) : []),\n        ...(ship[0] % 7 !== 7 ? ship.map(part => part + 1) : []),\n        ...(ship[0] >= 7 ? [ship[0] - 8, ship[0] - 7, ship[0] - 6] : []),\n        ...(ship[ship.length - 1] <= 42\n          ? [ship[ship.length - 1] + 8, ship[ship.length - 1] + 7, ship[ship.length - 1] + 6]\n          : [])\n      );\n    }\n    return tiles.filter(tile => 0 <= tile && tile <= 48);\n  }\n\n  function placeShip(length, existingShips) {\n    const filledTiles = [...new Set(existingShips.map(ship => getForbiddenTiles(ship)).flat())];\n    const horizontalPossibilities = Array.from(Array(49).keys())\n      .filter(number => number % 7 < 8 - length)\n      .filter(tile => filledTiles.indexOf(tile) === -1);\n    const verticalPossibilities = Array.from(Array(length * 7).keys()).filter(tile => filledTiles.indexOf(tile) === -1);\n\n    function getDirection() {\n      if (horizontalPossibilities.length === 0) {\n        return 'vertical';\n      } else if (verticalPossibilities.length === 0) {\n        return 'horizontal';\n      } else return Math.random() > 0.5 ? 'horizontal' : 'vertical';\n    }\n    const dir = getDirection();\n\n    function getFirstPos() {\n      return dir === 'horizontal'\n        ? horizontalPossibilities[Math.floor(Math.random() * horizontalPossibilities.length)]\n        : verticalPossibilities[Math.floor(Math.random() * verticalPossibilities.length)];\n    }\n\n    const firstPos = getFirstPos();\n    let ship = [firstPos];\n    for (let i = 1; i < length; i++) {\n      ship.push(dir === 'horizontal' ? firstPos + i : firstPos + i * 7);\n    }\n    if (ship.some(tile => filledTiles.indexOf(tile) >= 0)) {\n      ship = placeShip(length, existingShips);\n    }\n    return ship;\n  }\n\n  function selectAsShip(index) {\n    const newSelected = [...selectedAsShips, index];\n    setSelectedAsShips(newSelected);\n    if (\n      newSelected.sort((a, b) => a - b).join('') ===\n      ships\n        .flat()\n        .sort((a, b) => a - b)\n        .join('')\n    ) {\n      setCompleted(true);\n    }\n  }\n\n  function clear() {\n    setSelectedAsShips([]);\n    setSelectedAsWater([]);\n  }\n\n  return (\n    <div className=\"console\">\n      <div className=\"sea-game\">\n        <div\n          className=\"sea\"\n          style={{\n            gridTemplateColumns: `repeat(7, ${tileSideLength}px)`,\n            gridTemplateRows: `repeat(1, ${tileSideLength / 2}px)`,\n            marginLeft: `${tileSideLength / 2}px`\n          }}\n        >\n          {numbers[0].map((number, index) => (\n            <div key={index} className=\"number\">\n              {number}\n            </div>\n          ))}\n        </div>\n        <div className=\"inner-sea\">\n          <div\n            className=\"sea\"\n            style={{\n              gridTemplateColumns: `repeat(1, ${tileSideLength / 2}px)`,\n              gridTemplateRows: `repeat(7, ${tileSideLength}px)`\n            }}\n          >\n            {numbers[1].map((number, index) => (\n              <div key={index} className=\"number\">\n                {number}\n              </div>\n            ))}\n          </div>\n          <div\n            className=\"sea\"\n            style={{\n              gridTemplateColumns: `repeat(7, ${tileSideLength}px)`,\n              gridTemplateRows: `repeat(7, ${tileSideLength}px)`\n            }}\n          >\n            {Array.from(Array(49).keys()).map(tile => {\n              const selected = selectedAsShips.includes(tile)\n                ? 'ship'\n                : selectedAsWater.includes(tile)\n                ? 'water'\n                : null;\n              return (\n                <Tile\n                  key={tile}\n                  tile={tile}\n                  ships={ships}\n                  selectingWater={selectingWater}\n                  initialValue={visiblePositions.includes(tile) ? 'ship' : null}\n                  selectAsShip={selectAsShip}\n                  unselectAsShip={index => setSelectedAsShips(selectedAsShips.filter(selected => selected !== index))}\n                  selectAsWater={index => setSelectedAsWater([...selectedAsWater, index])}\n                  unselectAsWater={index => setSelectedAsWater(selectedAsWater.filter(selected => selected !== index))}\n                  selected={selected}\n                  completed={completed}\n                  toggleMouseDown={toggleMouseDown}\n                  mouseDown={mouseDown}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n      <div className=\"controls\">\n        <Button onClick={generateShips}>New Game</Button>\n        <p>Selecting:</p>\n        <OptionToggle options={['water', 'ship']} colours={['blue', 'yellow']} firstOptionSelected={selectingWater} setOption={() => toggleSelectingWater(!selectingWater)} />\n        <p>{completed && \"That's it, well done!\"}</p>\n        {ships.map((ship, index) => (\n          <p key={index} style={{ color: ship.every(part => selectedAsShips.includes(part)) ? 'grey' : 'black' }}>\n            {ship.map(part => 'O')}\n          </p>\n        ))}\n        <Button colour=\"purple\" onClick={clear}>\n          Start again\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Battleships;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Menu from './components/Menu';\nimport Noughts from './components/Noughts';\nimport Connect4 from './components/Connect4';\nimport Battleships from './components/Battleships';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Nav />\n        <Route exact path=\"/\" component={Menu} />\n        <Route exact path=\"/noughts&crosses\" component={Noughts} />\n        <Route exact path=\"/connect4\" component={Connect4} />\n        <Route exact path=\"/battleships\" component={Battleships} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}